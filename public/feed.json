{
    "version": "https://jsonfeed.org/version/1",
    "title": "CC康纳百川",
    "description": "一个无趣的人",
    "home_page_url": "https://ccknbc.github.io",
    "items": [
        {
            "id": "https://ccknbc.github.io/posts/4.html",
            "url": "https://ccknbc.github.io/posts/4.html",
            "title": "简单浏览器更新推送的实现",
            "date_published": "2020-08-18T12:39:36.000Z",
            "content_html": "<p>这篇文章主要想大家介绍如何使用<code>webpushr</code>及其对应的插件<code>hexo-web-push-notification</code>来帮我们节省时间完成自动推送更新</p>\n<a id=\"more\"></a>\n\n<h2 id=\"插件安装\"><a href=\"#插件安装\" class=\"headerlink\" title=\"插件安装\"></a>插件安装</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm i hexo-web-push-notification --save</span><br></pre></td></tr></table></figure>\n<h2 id=\"注册webpushr账号\"><a href=\"#注册webpushr账号\" class=\"headerlink\" title=\"注册webpushr账号\"></a>注册webpushr账号</h2><p>**<a href=\"https://app.webpushr.com/\">首先进入官网注册账号</a>**，注意需要谷歌人机验证，请自备工具访问<br><img src= \"https://cdn.jsdelivr.net/gh/CCKNBC/ccknbc.github.io@latest/img/loading.gif\" data-lazy-src=\"https://s1.ax1x.com/2020/08/18/dMASZ8.png\" alt=\"注册账号\"></p>\n<p>注册后登录就进入网站选择界面，不过新注册应该是直接进入添加新网站，老用户也可点击添加新网站，但实际上可以多网站共用，因此也就没没必要了<br><img src= \"https://cdn.jsdelivr.net/gh/CCKNBC/ccknbc.github.io@latest/img/loading.gif\" data-lazy-src=\"https://s1.ax1x.com/2020/08/18/dMkxqf.png\" alt=\"登陆成功\"></p>\n<p>根据图中提示自行完善网站信息<br><img src= \"https://cdn.jsdelivr.net/gh/CCKNBC/ccknbc.github.io@latest/img/loading.gif\" data-lazy-src=\"https://s1.ax1x.com/2020/08/18/dMkOxI.png\" alt=\"添加网站\"></p>\n<p>注册完毕后就可前往管理面板了<br><img src= \"https://cdn.jsdelivr.net/gh/CCKNBC/ccknbc.github.io@latest/img/loading.gif\" data-lazy-src=\"https://s1.ax1x.com/2020/08/18/dMkjMt.png\" alt=\"验证安装\"></p>\n<p>这里截图划线部分为<code>Tracking code</code>，忘记保存的话可以回退步骤，或者待会儿在管理面板查看<br><img src= \"https://cdn.jsdelivr.net/gh/CCKNBC/ccknbc.github.io@latest/img/loading.gif\" data-lazy-src=\"https://s1.ax1x.com/2020/08/18/dMkvsP.png\" alt=\"安装组件\"></p>\n<p>然后我们大致熟悉一下环境，更多信息可自行查看；为什么使用这个实际上因为</p>\n<ol>\n<li>他能做到用户主动订阅浏览器更新通知，新文章或者公告等（后面再讲）</li>\n<li>它在60000订阅一下是完全免费的，而且很可靠，你不需要服务器或者其他复杂配置，所有一切均由webpushr完成</li>\n<li>懒得使用网站统计，它这个可视化的数据也还是够用了，每周也会给你发一封邮件，说明你这周的订阅表现</li>\n<li>它的功能强大，自定义程度高，界面比较友好</li>\n</ol>\n<p><img src= \"https://cdn.jsdelivr.net/gh/CCKNBC/ccknbc.github.io@latest/img/loading.gif\" data-lazy-src=\"https://s1.ax1x.com/2020/08/18/dMApdS.png\" alt=\"面板预览\"></p>\n<p>当然他还是有缺点的</p>\n<ol>\n<li>浏览器清除本地数据后他会把你当作新用户发送欢迎通知，影响了数据统计</li>\n<li>它的地图把宝岛台湾划在中国之外</li>\n<li>有时候你会延后几天收到一条更新通知</li>\n</ol>\n<h2 id=\"获取几个必要配置\"><a href=\"#获取几个必要配置\" class=\"headerlink\" title=\"获取几个必要配置\"></a>获取几个必要配置</h2><ol>\n<li>点击<code>Setup</code> -&gt; <code>Tracking code</code>(或<code>Integration</code> -&gt; <code>Manual Integration</code>)，如果你刚才保存了可以核对一下是否有误</li>\n<li>点击<code>Integration</code> -&gt; <code>REST API Keys</code>可以获取到<code>Key</code>和<code>Authentication Token</code></li>\n</ol>\n<p>加下来我们进行配置，<a href=\"https://github.com/glazec/hexo-web-push-notification\">按照开发者的README</a>，我们需要在HEXO根目录的配置文件<code>_config.yml</code>添加如下内容（记得替换为自己的）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">webPushNotification:</span><br><span class=\"line\">  webpushrKey: &quot;your webpushr rest api key&quot;</span><br><span class=\"line\">  webpushrAuthToken: &quot;your webpushr authorize token&quot;</span><br><span class=\"line\">  trackingCode: &quot;AEGlpbdgvBCWXqXI6PtsUzobY7TLV9gwJU8bzMktrwfrSERg_xnLVbjpCw8x2GmFmi1ZcLTz0ni6OnX5MAwoM88&quot;</span><br></pre></td></tr></table></figure>\n\n<p>关于安装部分就差不多结束了，下面我们回到webpushr网站对我们的网站进行相关配置</p>\n<p>这部分就不截图了，大家即使不懂英语也能看明白知道setup, push的意思再配合网站的显示，还有操作变化都能明白（网页翻译真好用），比如选择订阅推送的样式内容（emoji也是特色个人觉得），订阅通知小铃铛，欢迎推送，这些在你刚才打开我网站的时候都已经体验过了（如果没有，检查一下弹窗是否被拦截，清楚浏览器数据后体验一下）</p>\n<p>API通知就是利用我们生成好的newpost.json本地与远端进行比较来进行更新文章推送，比较特色的就是定时自动推送，这个我们拿来做临时公告也是非常方便的</p>\n<p>其他内容就请读者自定探索吧</p>\n<h2 id=\"如何完成文章更新推送\"><a href=\"#如何完成文章更新推送\" class=\"headerlink\" title=\"如何完成文章更新推送\"></a>如何完成文章更新推送</h2><p>但说了这么多，触发推送的条件还没讲呢，而我们一般推送文章，大致使用如下格式即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: Hexo使用Web Push Notification 浏览器通知推送</span><br><span class=\"line\">tags:</span><br><span class=\"line\">  - hexo</span><br><span class=\"line\">  - 服务器推送技术</span><br><span class=\"line\">  - push notifications</span><br><span class=\"line\">categories:</span><br><span class=\"line\">  - 开发</span><br><span class=\"line\">comments: true</span><br><span class=\"line\">abbrlink: 98ae9e55</span><br><span class=\"line\">date: 2020-02-26 10:00:00</span><br><span class=\"line\">---</span><br><span class=\"line\"></span><br><span class=\"line\">Web Push Notification 是怎么工作的？个人博客为什么要使用它？如何使用它？</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- more --&gt;</span><br></pre></td></tr></table></figure>\n<p>请注意一定要有预览内容，也就是<code>---</code>和<code>&lt;!-- more --&gt;</code>之间的内容</p>\n<p>讲到这里我们就发现，我们可以通过是否写预览内容来自主控制是否向订阅者推送这篇文章更新，而不是所有文章都推送，这种主动方式是我觉得比较人性化的</p>\n<p>点击 <strong><a href=\"https://www.inevitable.tech/posts/a1b574bb/\">查看开发经历</a> | <a href=\"https://www.inevitable.tech/posts/98ae9e55/\">查看更多相关资讯</a> | <a href=\"https://www.inevitable.tech/posts/afd56cf2/\">特殊推送解决方案</a> | <a href=\"https://www.inevitable.tech/posts/a1b574bb/\">泛用推送解决方案</a></strong></p>\n<h2 id=\"其他须知\"><a href=\"#其他须知\" class=\"headerlink\" title=\"其他须知\"></a>其他须知</h2><p>你如果阅读了隐私，你会发现它可以收集用户的很多信息，比如IP，国家或地区，设配类型等等，这些你可以选择自行开启或关闭，因为有时候过度收集这些无用隐私也是没必要的；不过作为有垃圾评论或者恶意评论来说，这种记录也是一种帮助</p>\n<p>当然要想让读者愿意订阅你的博客，你的确要在内容下下功夫，我相信只要你能持续输出有趣有用的内容，就不愁没有订阅者的，一起加油吧！</p>\n<p>这篇文章还有许多不足的地方，<strong>如有错误，欢迎指正</strong></p>\n",
            "tags": [
                "webpushr",
                "web-push"
            ]
        },
        {
            "id": "https://ccknbc.github.io/posts/3.html",
            "url": "https://ccknbc.github.io/posts/3.html",
            "title": "HEXO折腾（持续更新中）",
            "date_published": "2020-06-30T16:00:00.000Z",
            "content_html": "<p><strong>个人目前使用主题为Butterfly <code>3.0.1</code>版本，HEXO <code>5.0.2</code>版本</strong></p>\n<p>请按照以下步骤依次安装相应依赖和框架</p>\n<h2 id=\"搭建步骤\"><a href=\"#搭建步骤\" class=\"headerlink\" title=\"搭建步骤\"></a>搭建步骤</h2><h3 id=\"安装-Node-js\"><a href=\"#安装-Node-js\" class=\"headerlink\" title=\"安装 Node.js\"></a>安装 Node.js</h3><blockquote>\n<p><strong>什么是 Node.js ？</strong><br>这得从什么是 JS 说起，JS 也就是 JavaScript。（为什么有种从盘古开天辟地开始的感觉）没错，JavaScript 就是网页的盘古。JavaScript 是一种编程语言，我们所见到的网页中的交互和逻辑处理几乎都是由 JavaScript 完成。<br>JavaScript 语法简单，易学易用。（当然也请不要小瞧它，虽然它入门门槛低，但上限同样也很高。包括但不限于实现网站前后端，手机桌面应用程序，机器学习，计算机图形学等。）<br>在 Node.js 诞生前，JavaScript 都运行于浏览器端。也就是说，它是鱼，浏览器是装满了水的水缸。<br>2008 年，Chrome V8 诞生。2009 年，Node.js 诞生。并成为 GitHub 早期最著名的开源项目。GitHub 可能大家已有所了解，后续再说。<br>Node.js 便是一个基于 Chrome V8 引擎的 JavaScript 运行环境。（当年第一次看到这句话时，我也一脸懵逼。）按照我的理解，JavaScript 是鱼，Chrome V8 就是抽水机，Node.js 则把这台抽水机也装在你电脑上。于是你的电脑也有了 Node.js 这个和浏览器相似的水缸，也可以在里面运行 JavaScript 了！<br>当然 Node.js 和浏览器端还是因为自身定位和一些历史原因而有些许区别的，不再展开。<br><a href=\"https://baike.baidu.com/item/node.js/7567977\">Node.js | 百度百科</a><br><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript\">JavaScript | MDN</a></p>\n</blockquote>\n<p><a href=\"https://nodejs.org/zh-cn/\">下载｜ Node.js</a></p>\n<p>建议下载<strong>长期支持版</strong>而非<strong>当前发布版</strong>（因为如果是最新版，容易出现一些奇妙的 bug）。</p>\n<p>全部默认下一步进行安装。</p>\n<p>Windows 打开命令提示符，macOS 打开终端。（= =，这个不会就请百度吧。）<br>Linux 用户右上角关闭本标签页。</p>\n<p>后续如提到输入命令，均默认指打开终端进行输入。</p>\n<p>输入 <code>node --version</code>，如果得到的版本号与你方才安装的一致，那么 Node.js 就已经成功安装。</p>\n<blockquote>\n<p>Node.js 安装成功时也默认安装了 <code>npm</code>，在此后将会用到。<br><code>npm</code> 是随 Node.js 一起被安装的包管理工具，你可以理解成 Node.js 自带的应用商店。</p>\n</blockquote>\n<p>对了，国内使用 npm 可能很慢。</p>\n<p><strong>你可以考虑切换为 <code>taobao</code> 镜像源。</strong></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"built_in\">set</span> registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><a href=\"https://www.yuque.com/yunyoujun/notes/npm-and-yarn#nrm\">npm &amp; yarn 常用包与命令</a></p>\n</blockquote>\n<h3 id=\"Git-与-GitHub\"><a href=\"#Git-与-GitHub\" class=\"headerlink\" title=\"Git 与 GitHub\"></a>Git 与 GitHub</h3><h4 id=\"安装-Git\"><a href=\"#安装-Git\" class=\"headerlink\" title=\"安装 Git\"></a>安装 Git</h4><blockquote>\n<p>Visual Studio Code，简称 VS Code。<br>目前最为强大易用的编辑器，轻量且快速。（<del>宇宙第一编辑器</del>）<br>注意：它并不是我们常常听到的 VS，VS 常常指的是 Visual Studio，是一个功能强大的 IDE（集成开发环境），体积也相比 VS Code 都要大上一个量级。</p>\n</blockquote>\n<p>在此之前，我建议你先安装 <a href=\"https://code.visualstudio.com/\">VS Code</a>。因为安装 Git Bash 时，可以设置 VS Code 作为默认编辑器。</p>\n<blockquote>\n<p>Git 是一个开源的分布式版本控制系统，由 Linus Torvalds（同时也是 Linux 的作者）为了管理 Linux 开发而开发。<br>简而言之，是一个版本管理工具。譬如设计师设计好了第三版的海报，客户却说还是要第一版吧，这时便可以通过 Git 快速回退到最初的版本。<br>你只需要把每次更改的状态（Git 会自动进行检测，你只要掌握基础的几条命令就可以了）告诉 Git，而不需要每个版本都保存一份压缩包，既方便也能大大节约空间。<br>（当然这主要只对代码文本起作用，因为 Git 的本质是记录各行代码的增减，倘若是像视频、海报这类二进制文件来说便体现不出丝毫优势了。当然想要应对这种场景还有 <a href=\"https://git-lfs.github.com/\">Git LFS</a>。）</p>\n</blockquote>\n<p>下载 <a href=\"https://git-scm.com/\">Git</a> 并安装（如果国内速度太慢，可以试试<a href=\"https://pc.qq.com/detail/13/detail_22693.html\">这里</a>）</p>\n<p>macOS 用户可以下载官网的安装包进行安装，也可以直接安装 App Store 的 Xcode（附带会安装 Git，但是比较大）。</p>\n<blockquote>\n<p>类似的工具还有：SVN。但始终更推荐 Git，因为它功能更为强大且它的背后还有更强大的生态：GitHub。</p>\n</blockquote>\n<h4 id=\"注册-GitHub\"><a href=\"#注册-GitHub\" class=\"headerlink\" title=\"注册 GitHub\"></a>注册 GitHub</h4><p>这一部分内容，你也可以放到本地调试并预览成功后并打算线上部署的时候，再回过头来看。</p>\n<blockquote>\n<p>GitHub 一听便与 Git 有所渊源。<code>Git</code> 在英文中是懒人、饭桶之意。<code>Hub</code> 则是中心、集线器的意思。譬如 USB 集线器就是 USB Hub。所以 GitHub 就是饭桶中心（<del>大雾</del>）。<br>GitHub 是全世界最大的开源项目与代码托管平台，也是众多开发者的交流场所。<del>还是全球最大的同性交友网站</del>。<br>而代码托管本身用到的正是上文提到的 Git 技术。</p>\n</blockquote>\n<p>注册 <a href=\"https://github.com/\">GitHub</a> 账号。（虽然都是英文，但不必畏惧，也并不会造成使用障碍，只要记得最常用的选项含义即可，以及善用手头的翻译软件。）</p>\n<blockquote>\n<p>注意：注册时的英文用户名将成为你可以使用的免费域名前缀。</p>\n</blockquote>\n<p>登录 GitHub。</p>\n<blockquote>\n<p>为什么要用 GitHub？<br>对于平民玩家来说，在初次尝试建立自己的网站时，也许并不会有闲钱或者说决心来购买自己的服务器与域名。<br>而 GitHub 则提供了 <a href=\"https://pages.github.com/\">GitHub Pages</a> 这一服务。<br>用户们可以利用这一服务，部署自己的静态站点。</p>\n</blockquote>\n<p>点击右上角的 <code>+</code> -&gt; <code>New repository</code> 新建仓库。</p>\n<p>仓库名称务必为 <code>你的用户名.github.io</code>，用户名是英文，大小写无所谓，但建议统一小写。（因为你会发现时常切换大小写很麻烦）</p>\n<blockquote>\n<p>为什么必须这个作为仓库名？<br>GitHub Pages 服务的命名规范，同时若您没有自己的域名，使用Github提供的服务的话，请务必将此仓库设为公开，同时它也将成为你的专属域名。当然，你也可以购置自己的专属域名并用它来提供内容。</p>\n</blockquote>\n<p>点击 <code>Create repository</code>。</p>\n<h3 id=\"安装-Hexo\"><a href=\"#安装-Hexo\" class=\"headerlink\" title=\"安装 Hexo\"></a>安装 Hexo</h3><p><a href=\"https://hexo.io/\">Hexo</a></p>\n<ul>\n<li>GitHub: <a href=\"https://github.com/hexojs/hexo\">https://github.com/hexojs/hexo</a></li>\n<li><a href=\"https://hexo.io/zh-cn/docs/index.html\">官方文档</a>（直接参考文档也是一个不错的选择）</li>\n</ul>\n<blockquote>\n<p><strong>为嘛使用 Hexo ？</strong><br>Hexo 是一个快速、简洁而强大的博客框架，基于 Node.js，同样托管于 GitHub 之上。生态中拥有众多插件主题。你可以基于它快速生成一些静态页面。<br>你可以使用别人的各种主题与插件，也可以自己定制开发想要的功能。<br><strong>为什么不是…?</strong><br>其他常用的博客框架还有 <a href=\"https://wordpress.org/\">WordPress</a>，<a href=\"https://typecho.org/\">Typecho</a>，<a href=\"https://ghost.org/\">Ghost</a> 等，但这些往往都需要购置自己的服务器，而无法静态化地部署到 GitHub Pages 上。（当然，相应的功能和灵活性也大大提升。）静态化站点还有一个优势就是访问速度往往更快。<br>静态网站生成器还有 <a href=\"https://vuepress.vuejs.org/\">Vuepress</a>，<a href=\"https://www.gatsbyjs.org/\">Gatsby</a> 等。但这些多是为了写文档而量身定制的，你也可以使用它们，但是相较 Hexo 的博客定位，它们关于博客的插件和主题以及解决办法会少得多。<br>Hexo 提供的功能与 <a href=\"https://gohugo.io/\">Hugo</a> 几乎都有，（生成大量文件时，甚至比 Hexo 更快）不过它是基于 GO 语言。日后你想对自己的网站进行自定义，即便是 Hugo，你编写前端的交互仍旧需要使用 JavaScript，所以选择基于 JavaScript 的 Hexo 可以降低学习成本。（你若对 GO 有兴趣，仍然可以尝试使用 Hugo，但本教程将不会针对 Hugo 进行展开。）<br>所以对于新手来说，使用 Hexo 作为起始点，不失为一个好选择。（当然如果你有钱租服务器，并希望快速上手的话，就可以考虑考虑 WordPress 或者 Typecho）<br>这里顺带推荐一下小伙伴 <a href=\"https://asuhe.jp/\">染川瞳</a> 的 WordPress 主题 <a href=\"https://github.com/mirai-mamori/Sakurairo\">Sakurairo</a>，<a href=\"https://guhub.cn/\">阔落</a> 的 Typecho 主题 <a href=\"https://github.com/BigCoke233/miracles\">miracles</a>，都是很漂亮的主题。</p>\n</blockquote>\n<p>在终端中输入以下命令：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br><span class=\"line\"><span class=\"comment\"># 如果安装失败，可能是没有权限，可以尝试头部加上 sudo 重新执行</span></span><br><span class=\"line\"><span class=\"comment\"># sudo npm install hexo-cli -g</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><code>install</code> 自然是安装。<br><code>hexo-cli</code> 则是 <code>hexo</code> 的终端工具，可以帮助你生成一些模版文件，之后再用到。<br><code>-g</code> 代表的是全局安装。也就是在任何地方都可以使用，否则会只能在安装的目录下使用。</p>\n</blockquote>\n<p>此时，请先通过 <code>cd</code> 进入你本地电脑打算存储网站代码的文件夹目录。（或者右键文件夹 Git Bash Here）</p>\n<blockquote>\n<p><a href=\"https://baike.baidu.com/item/cd/3516393\">cd | DOS 命令</a><br><a href=\"https://baike.baidu.com/item/cd/3516411\">cd （LINUXSHELL 命令）</a></p>\n</blockquote>\n<p>譬如：</p>\n<blockquote>\n<p>注意：这里是你自定义的目录，请不要复制粘贴</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># &#x27;#&#x27; 字符后的文字代表注释，不需要输入</span></span><br><span class=\"line\"><span class=\"comment\"># Windows</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> C:\\Users\\CCKNBC\\Documents\\GitHub\\</span><br><span class=\"line\"><span class=\"comment\">#实际上我用的是D:blog目录,按需选择即可</span></span><br><span class=\"line\"><span class=\"comment\"># macOS</span></span><br><span class=\"line\"><span class=\"comment\"># cd /Users/yunyou/github/</span></span><br></pre></td></tr></table></figure>\n\n<p>接下来输入：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo init 你的名字.github.io</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><code>hexo</code> 正是因为我们之前安装了 <code>hexo-cli</code> 这一个包，所以我们可以在终端中使用 <code>hexo</code> 这一命令。<br><code>init</code> 初始化博客的模版文件。后面跟的是你要新建的文件夹，最好和你此前新建的仓库名一致。</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 进入你的博客文件夹</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> 你的名字.github.io</span><br><span class=\"line\"><span class=\"comment\"># 默认安装所有 `package.json` 文件中提到的包</span></span><br><span class=\"line\">npm install</span><br><span class=\"line\"><span class=\"comment\"># 你也可以缩写成 hexo s</span></span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n\n<p><code>server</code> 代表开启本地的 Hexo 服务器，这时你就可以打开浏览器，在地址栏中输入 <code>localhost:4000</code> 就可以看到本地的网页了。</p>\n<p>按 <code>Ctrl + C</code> 中断服务器的运行。</p>\n<p>至此，基础的模版页面便已经搭建好了。</p>\n<h3 id=\"主题安裝\"><a href=\"#主题安裝\" class=\"headerlink\" title=\"主题安裝\"></a>主题安裝</h3><h3 id=\"使用-Hexo-主题\"><a href=\"#使用-Hexo-主题\" class=\"headerlink\" title=\"使用 Hexo 主题\"></a>使用 Hexo 主题</h3><p>Hexo 默认提供的是 <a href=\"https://github.com/hexojs/hexo-theme-landscape\">hexo-theme-landscape</a> 主题。<br>默认主题样式简单，功能较少。所以大多数人并不会使用默认主题。</p>\n<h3 id=\"Git-安装\"><a href=\"#Git-安装\" class=\"headerlink\" title=\"Git 安装\"></a>Git 安装</h3><p>在博客根目录里安装稳定版<code>master</code>分支【推荐】</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"code\"><pre><span class=\"line\">git clone <span class=\"literal\">-b</span> master https://github.com/jerryc127/hexo<span class=\"literal\">-theme</span><span class=\"literal\">-butterfly</span>.git themes/butterfly</span><br></pre></td></tr></table></figure>\n\n<p>如果想要安装比较新的<code>dev</code>分支，可以</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"code\"><pre><span class=\"line\">git clone <span class=\"literal\">-b</span> dev https://github.com/jerryc127/hexo<span class=\"literal\">-theme</span><span class=\"literal\">-butterfly</span>.git themes/butterfly</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"npm-安装\"><a href=\"#npm-安装\" class=\"headerlink\" title=\"npm 安装\"></a>npm 安装</h3><blockquote>\n<p>此方法只支持<code>Hexo 5.0.0</code>以上版本</p>\n</blockquote>\n<p>在博客根目录里</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm i hexo<span class=\"literal\">-theme</span><span class=\"literal\">-butterfly</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"应用主题\"><a href=\"#应用主题\" class=\"headerlink\" title=\"应用主题\"></a>应用主题</h3><p>修改hexo配置文件<code>_config.yml</code>（根目录），把主题改为<code>Butterfly</code>（注意配置要和你的主题文件夹名大小写完全一致哦）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">theme: butterfly</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>如果你沒有<code>pug</code>以及<code>stylus</code>的渲染器，请下载安装： </p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>在进行配置修改之前，为了以后主题通过git pull平滑升级，请不要随意改动主题源码，虽然你可以通过强制合并来解决，但保险点总是没错的，并且由于主题的**<code>约定&gt;配置</code><strong>特性，因此我们通常在Hexo根目录</strong><code>sorce/_data</code><strong>下把主题的</strong><code>_config.yml</code><strong>（主题目录）复制过来，并且重命名为</strong><code>butterfly.yml</code>**，然后再对butterfly.yml进行修改即可</p>\n</blockquote>\n<p>有了上面的基础，我们就可以根据对应的**<a href=\"https://demo.jerryc.me/\">文档</a>**修改相应的配置了,以下不再赘述</p>\n<h3 id=\"生成静态文件\"><a href=\"#生成静态文件\" class=\"headerlink\" title=\"生成静态文件\"></a>生成静态文件</h3><p>至今我们的工作都是在本地进行，想必你也很想放到线上与小伙伴们分享。<br>这便轮到了 GitHub Pages 的出场，不过 GitHub Pages 只支持纯静态文件。</p>\n<p>所以我们需要使用以下命令先来生成站点的静态文件。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 如果进行多次生成，为了避免受错误缓存影响，最好使用 hexo clean 先清除一遍。</span></span><br><span class=\"line\">hexo generate</span><br><span class=\"line\"><span class=\"comment\"># 缩写为 hexo g</span></span><br></pre></td></tr></table></figure>\n\n<p>此时你的文件夹目录下会出现 <code>public</code> 这个文件夹，里面存放的就是你站点的静态文件。</p>\n<h3 id=\"与远程仓库建立关联\"><a href=\"#与远程仓库建立关联\" class=\"headerlink\" title=\"与远程仓库建立关联\"></a>与远程仓库建立关联</h3><p>接下来我们将本地的仓库与此前在 GitHub 上建立的仓库建立关联。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">git init <span class=\"comment\"># 初始化 Git 仓库，只需要执行一次即可</span></span><br></pre></td></tr></table></figure>\n\n<p>在将其部署到 GitHub Pages 上之前，我们最好先建立一个分支。</p>\n<blockquote>\n<p>什么是分支？<br>Git 提供了版本管理功能，其中还有一个分支功能，你现在可以简单地将其理解为平行世界。</p>\n</blockquote>\n<p><code>你的名字.github.io</code> 部署后，GitHub Pages 将默认使用你的 master 分支作为静态文件部署。<br>所以我们最好新建一个 hexo 分支（命名无所谓）用来存储 Hexo 地源代码，master 分支则用来存储部署后的静态文件。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">git checkout -b hexo</span><br></pre></td></tr></table></figure>\n\n<p>这时便成功建立了一个 hexo 分支。（此后的工作都将在 hexo 分支下进行）</p>\n<p>你可以通过 <code>git branch -v</code> 来查看当前有哪些分支，使用 <code>git branch 分支名</code> 来切换到对应的分支。</p>\n<blockquote>\n<p><a href=\"https://www.yunyoujun.cn/note/git-learn-note/\">Git 学习笔记</a></p>\n</blockquote>\n<h3 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h3><p>为了更方便的部署到 GitHub Pages，Hexo 提供了 <code>hexo-deployer-git</code> 插件。</p>\n<p>老规矩，安装。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git</span><br></pre></td></tr></table></figure>\n\n<p>在 <code>_config.yml</code> 中配置。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">你此前新建的仓库的链接</span> <span class=\"comment\"># 比如：https://github.com/YunYouJun/yunyoujun.github.io</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">master</span> <span class=\"comment\"># 默认使用 master 分支</span></span><br><span class=\"line\">  <span class=\"attr\">message:</span> <span class=\"string\">Update</span> <span class=\"string\">Hexo</span> <span class=\"string\">Static</span> <span class=\"string\">Content</span> <span class=\"comment\"># 你可以自定义此次部署更新的说明</span></span><br></pre></td></tr></table></figure>\n\n<p>保存，部署！</p>\n<blockquote>\n<p>第一次可能需要你输入用户名与密码。<br>密码输入的时候不会出现 ***，不要害怕，已经输入进去了。</p>\n</blockquote>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>等待完成后，打开网址 <code>https://你的名字.github.io</code> 就能看到你的线上网站了。</p>\n<blockquote>\n<p>使用 https，http 可能无法正常打开。HTTPS 是多了安全加密的 HTTP，Chrome 浏览器已经默认会显示 <code>http</code> 链接为不安全。<br>为了安全，建议开启强制 https 跳转。<code>项目地址页面 -&gt; Settings -&gt; Options -&gt; GitHub Pages -&gt; Enforce HTTPS</code>。（翻到下面）<br>此时，http 网址会自动重定向到 https</p>\n</blockquote>\n<h3 id=\"备份与自动部署\"><a href=\"#备份与自动部署\" class=\"headerlink\" title=\"备份与自动部署\"></a>备份与自动部署</h3><p>我们当前只是将生成的静态文件部署到了云端。</p>\n<p>为了以防万一，我们应该将网站的源代码文件也推送到 GitHub 仓库备份。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 与远程 Git 仓库建立连接，只此一次即可</span></span><br><span class=\"line\">git remote add origin https://github.com/你的用户名/你的名字.github.io</span><br></pre></td></tr></table></figure>\n\n<p>接下来准备提交，这几句命令将是你以后每次备份所需要输入。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 添加到缓存区</span></span><br><span class=\"line\">git add -A</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;这次做了什么更改，简单描述下即可&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 推送至远程仓库</span></span><br><span class=\"line\">git push</span><br><span class=\"line\"><span class=\"comment\"># 第一次提交，你可能需设置一下默认提交分支</span></span><br><span class=\"line\"><span class=\"comment\"># git push --set-upstream origin hexo</span></span><br></pre></td></tr></table></figure>\n\n<p>每次推送都要输入这三条命令，你可能觉得有些麻烦。<br>那么你可以编写 bash 脚本。</p>\n<p>譬如，在根目录下新建 <code>update.sh</code>。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 如果没有消息后缀，默认提交信息为 `:pencil: update content`</span></span><br><span class=\"line\">info=<span class=\"variable\">$1</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [<span class=\"string\">&quot;<span class=\"variable\">$info</span>&quot;</span> = <span class=\"string\">&quot;&quot;</span>];</span><br><span class=\"line\"><span class=\"keyword\">then</span> info=<span class=\"string\">&quot;:pencil: update content&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\">git add -A</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;<span class=\"variable\">$info</span>&quot;</span></span><br><span class=\"line\">git push origin hexo</span><br></pre></td></tr></table></figure>\n\n<p>此后更新的话，只需要在终端执行 <code>sh update.sh</code> 即可。</p>\n<p>更新麻烦，每次部署也很麻烦，可以使用持续集成进行自动部署。</p>\n<blockquote>\n<p>什么是持续集成？<br>持续集成是一种软件开发实践。对软件进行自动化构建，以此来发现错误。<br>Travis CI 就是一个线上持续集成服务的提供商。它可以拉取你每次推送到 GitHub 上的代码，然后根据你的要求对其进行构建。<br>我们可以趁机让它自动生成网站静态文件，然后自动帮我们部署。<br>除此之外，你还可以使用 <a href=\"https://help.github.com/en/actions/getting-started-with-github-actions/about-github-actions\">GitHub Actions</a> ，<a href=\"https://www.netlify.com/\">Netlify</a> 等服务。<br>GitHub Actions 相比 Travis 等，自身便拥有仓库的 Token，不再需要额外设置，可以直接使用 <code>secrets.GITHUB_TOKEN</code>。<br>推荐一个专门用来部署 gh-pages 的 Actions <a href=\"https://github.com/peaceiris/actions-gh-pages\">actions-gh-pages</a></p>\n</blockquote>\n<p>关于更多更具体的自动化部署方案和操作步骤，你可以参考我的小伙伴 ChrAlpha 的 <a href=\"https://blog.ichr.me/post/automated-deployment-of-serverless-static-blog/\">初探无后端静态博客自动化部署方案</a>。</p>\n<p>他在文章中详细介绍了 Netlify 、GitHub Actions 和 Travis CI 的部署方法。</p>\n<p>你也可以参考 Hexo 的官方文档 <a href=\"https://hexo.io/zh-cn/docs/github-pages\">将 Hexo 部署到 GitHub Pages</a></p>\n<p>我就不在此画蛇添足。</p>\n<hr>\n<p>当然还有个更简便的方法，直接参考我的 <a href=\"https://github.com/YunYouJun/yunyoujun.github.io/blob/hexo/.github/workflows/gh-pages.yml\">gh-pages.yml</a>。</p>\n<p>去掉夹在 <code>yarn install</code> 与 <code>yarn build</code> 之间的 <code>algolia</code> 部分，直接粘贴到你的 <code>.github/workflows/</code> 文件夹（自己新建）下 <code>xxx.yml</code> 文件里即可。</p>\n<p>推送后便可直接自动部署。</p>\n<p>至此，你的站点便基本搭建完成，此后继续对主题进行自定义吧。</p>\n<h3 id=\"开始写作\"><a href=\"#开始写作\" class=\"headerlink\" title=\"开始写作\"></a>开始写作</h3><h4 id=\"文章\"><a href=\"#文章\" class=\"headerlink\" title=\"文章\"></a>文章</h4><p>输入以下命令即可新建 <code>xxx.md</code> 文件。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new post xxx</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><code>md</code> 是 <code>Markdown</code> 的后缀名，是一种简洁方便的文本标记语言。你只需要记住简单的几种语法，就可以快速进行编写。<br>为什么使用 Markdown？<br>首先 Hexo 本身就是将 Markdown 转化为静态的 Html 文件，来方便用户编写文章。<br>Markdown 就好似介于 Word 与 TXT 文本之间。Word 体积大、大部分功能实际上根本用不到，且最后的文档常常带有许多冗余信息。<br>而 TXT 却无法实现加粗、标题、下划线、水平分割线等常用的功能。<br>（这里所说的 TXT 只是一种纯文本格式的代称，实际上 Markdown 也是纯文本文件，不过通过语法和 Markdown 编译器，我们就可以看到一些简单的样式。）</p>\n</blockquote>\n<p>譬如本文就是通过 Markdown 编写。</p>\n<figure class=\"highlight md\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\"># 一级标题</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">## 二级标题</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"strong\">**加粗文字**</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>更多语法（虽然说是更多，但是其实也没多少）：<a href=\"https://github.com/younghz/Markdown\">Markdown 基本语法</a></p>\n</blockquote>\n<p>这是我写的一个 Markdown 样式：<a href=\"https://www.yunyoujun.cn/star-markdown-css/\">star-markdown-css</a></p>\n<p>上面是渲染过后的效果，你可以与其 Markdown 的<a href=\"https://raw.githubusercontent.com/YunYouJun/star-markdown-css/master/demo/md/demo.md\">纯文本原文</a>进行对比。</p>\n<h4 id=\"页面\"><a href=\"#页面\" class=\"headerlink\" title=\"页面\"></a>页面</h4><p>你可以新建一些自己的自定义页面。</p>\n<p>譬如直接在 Hexo 目录下的 <code>source</code> 文件夹下直接新建 HTML 进行编写。</p>\n<p>也可以通过以下命令来新建页面。（当然还是 Markdown，不过也是可以在 Markdown 里写 HTML 的，也会被渲染出来。）</p>\n<figure class=\"highlight md\"><table><tr><td class=\"code\"><pre><span class=\"line\">hexo new page xxx</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>至于对应的参数配置，请参考主题文档</p>\n</blockquote>\n<h2 id=\"FAQ\"><a href=\"#FAQ\" class=\"headerlink\" title=\"FAQ\"></a>FAQ</h2><h3 id=\"视频？\"><a href=\"#视频？\" class=\"headerlink\" title=\"视频？\"></a>视频？</h3><p>没有视频，一是懒，二是文字更利于更新勘误。</p>\n<p>以及文章中将会频繁出现参考链接，更方便使用。</p>\n<h3 id=\"如何绑定你的自定义域名？\"><a href=\"#如何绑定你的自定义域名？\" class=\"headerlink\" title=\"如何绑定你的自定义域名？\"></a>如何绑定你的自定义域名？</h3><p>首先，你得有个自己的域名。</p>\n<blockquote>\n<p>避免广告嫌疑，你可以自行前往相关域名提供商购买。<br><del>但是如果你有幸能看到谷歌广告（概率较小），可以考虑点一点。</del></p>\n</blockquote>\n<!-- > 原本我的确是这么写的。\n> 不过咱的确一直嫖的是[腾讯云](https://cloud.tencent.com/act/cps/redirect?redirect=1040&cps_key=598123cb511ac35c74d38b5a49392812&from=console)，而它又有一个[推广链接](https://cloud.tencent.com/act/cps/redirect?redirect=1040&cps_key=598123cb511ac35c74d38b5a49392812&from=console)。\n> 而你通过我这个[链接](https://cloud.tencent.com/act/cps/redirect?redirect=1040&cps_key=598123cb511ac35c74d38b5a49392812&from=console)访问腾讯云注册购买产品，也不会多花钱。所以就不妨[点一下](https://cloud.tencent.com/act/cps/redirect?redirect=1040&cps_key=598123cb511ac35c74d38b5a49392812&from=console)？\n> 「你看，很简单吧，谁都不会受伤的世界完成了。」——比企谷八幡 -->\n\n<p>并使用 CNAME 解析到 <code>你的名字.github.io</code>。（当然 A 记录直接解析到 GitHub Pages IP 地址也可以。）</p>\n<blockquote>\n<p><a href=\"https://help.github.com/en/github/working-with-github-pages/managing-a-custom-domain-for-your-github-pages-site#configuring-an-apex-domain\">Managing a custom domain for your GitHub Pages site</a></p>\n</blockquote>\n<p>在 <code>Hexo</code> 工作目录下 <code>source</code> 文件夹下新建 <code>CNAME</code> 文件（没有后缀名）。</p>\n<blockquote>\n<p>CNAME 即相当于告诉 GitHub 允许将 xxx.github.io 为你的域名提供服务。<br>source 目录下的文件除了特殊的 markdown 会被解析为 html，其余都会原样复制到生成的静态文件夹中。<br>所以你需要在 source 文件夹下建有 CNAME，它会在生成静态文件时，将 CNAME 拷贝到静态文件夹并部署到 master 分支。<br>如果只是在 GitHub 上设置（<code>项目地址页面 -&gt; Settings -&gt; Options -&gt; GitHub Pages -&gt; Custom domain</code>），它会自动添加到 master 分支上，但随后不包含 CNAME 的部署会将其覆盖。</p>\n</blockquote>\n<p>内容填写你的域名即可。</p>\n<blockquote>\n<p><a href=\"https://help.github.com/en/github/working-with-github-pages/about-custom-domains-and-github-pages\">About custom domains and GitHub Pages</a></p>\n</blockquote>\n<h3 id=\"备案\"><a href=\"#备案\" class=\"headerlink\" title=\"备案\"></a>备案</h3><p>如果想要使用国内的一些服务，比如 CDN，不备案确实寸步难行。</p>\n<p>此处我指的是 ICP 备案，并非公安备案。（实际上我从来没有进行过公安备案，且目前在使用服务时，并未受到任何相关限制。）</p>\n<p>国内备案往往意味着你还需要一台国内的服务器，譬如通过腾讯云备案时会需要你设置关联的服务器（阿里云应当也是如此）。<br>实际上你的网站并不一定得在这台服务器上，即便你只是免费试用了一个月，但是备案成功了，之后过期了对备案也不会有何影响。</p>\n<blockquote>\n<p>也就是说你完全可以使用学生优惠（10 元左右）购买一个月的云服务器，用于关联，并在这个月内抓紧备案好，此后云服务器过期不会影响备案问题。<br>学生优惠的话 <a href=\"https://www.aliyun.com/minisite/goods?userCode=ixykjqj2\">阿里云</a> 或者 <a href=\"https://url.cn/PLQYbz6n\">腾讯云</a> 都有。</p>\n</blockquote>\n<p>备案前需要注意的几点就是：</p>\n<ul>\n<li>确定你的域名是否可以备案</li>\n<li>关闭评论区</li>\n<li>提交备案时的备注说明不得含有 <code>交流</code> 字样</li>\n<li>首页不能含有其他网站的直达链接</li>\n<li>遵纪守法无不良信息（这是当然的）</li>\n</ul>\n<p>你也可以直接关停网站，等待备案成功后再重新打开。（今后每年偶尔会复查，但相对会宽松许多。）</p>\n<p>此后，按照网站指引的备案步骤一步步来即可。（以前还要等待幕布寄送拍照，现在可以直接在手机上人脸验证）</p>\n<p>备案成功后页脚必须清晰地展示备案号，且备案号含有指向 <a href=\"http://www.beian.miit.gov.cn/\">http://www.beian.miit.gov.cn/</a> 的超链接。</p>\n<h2 id=\"源文件备份\"><a href=\"#源文件备份\" class=\"headerlink\" title=\"源文件备份\"></a>源文件备份</h2><h3 id=\"备份什么？\"><a href=\"#备份什么？\" class=\"headerlink\" title=\"备份什么？\"></a>备份什么？</h3><p>百密总有一疏，因此我们需要做好博客源文件的备份，你固然可以直接将整个文件夹打包，但当你后续安装的插件越来越多，你会发现压缩或者解压耗时越来越长，实际上我们只需要备份<code>根目录</code>的几个文件（夹）即可，<code>source</code>文件夹（里面存放着你博客的主要资源），<code>_config.yml</code>（HEXO的配置，如果你不升级HEXO的话，这个也是很重要的），然后就是<code>package.json</code>（和它的名字一样，他能告诉你你安装了哪些插件及其对应的版本），有了这些你就能在另外一台电脑上很快恢复你的博客环境（当然我本人采用了<code>Cloud Studio</code>作为临时环境，也是不错的）</p>\n<p>我的<code>package.json</code>一览，如果其中一些插件你也有兴趣可以按照插件官方说明尝试，这里不做功能注释，虽然总会踩一些奇奇怪怪的坑，但当你慢慢修正时，虽然很折腾，但的确是乐在其中</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"attr\">&quot;name&quot;</span>: <span class=\"string\">&quot;hexo-site&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">&quot;version&quot;</span>: <span class=\"string\">&quot;0.0.0&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">&quot;private&quot;</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">&quot;scripts&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;build&quot;</span>: <span class=\"string\">&quot;hexo generate&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;clean&quot;</span>: <span class=\"string\">&quot;hexo clean&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;deploy&quot;</span>: <span class=\"string\">&quot;hexo deploy&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;server&quot;</span>: <span class=\"string\">&quot;hexo server&quot;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">&quot;hexo&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;version&quot;</span>: <span class=\"string\">&quot;5.0.0&quot;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">&quot;dependencies&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;cheerio&quot;</span>: <span class=\"string\">&quot;^1.0.0-rc.3&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;cnpm&quot;</span>: <span class=\"string\">&quot;^6.1.1&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;gulp-htmlmin&quot;</span>: <span class=\"string\">&quot;^5.0.1&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo&quot;</span>: <span class=\"string\">&quot;^5.0.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo-abbrlink&quot;</span>: <span class=\"string\">&quot;^2.2.1&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo-baidu-url-submit&quot;</span>: <span class=\"string\">&quot;0.0.6&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo-deployer-git&quot;</span>: <span class=\"string\">&quot;^2.1.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo-feed&quot;</span>: <span class=\"string\">&quot;^1.0.2&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo-generator-archive&quot;</span>: <span class=\"string\">&quot;^1.0.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo-generator-baidu-sitemap&quot;</span>: <span class=\"string\">&quot;^0.1.9&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo-generator-category&quot;</span>: <span class=\"string\">&quot;^1.0.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo-generator-index&quot;</span>: <span class=\"string\">&quot;^1.0.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo-generator-search&quot;</span>: <span class=\"string\">&quot;^2.4.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo-generator-sitemap&quot;</span>: <span class=\"string\">&quot;^2.1.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo-generator-tag&quot;</span>: <span class=\"string\">&quot;^1.0.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo-render-pug&quot;</span>: <span class=\"string\">&quot;^2.1.4&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo-renderer-ejs&quot;</span>: <span class=\"string\">&quot;^1.0.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo-renderer-marked&quot;</span>: <span class=\"string\">&quot;^3.0.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo-renderer-pug&quot;</span>: <span class=\"string\">&quot;^1.0.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo-renderer-stylus&quot;</span>: <span class=\"string\">&quot;^1.1.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo-server&quot;</span>: <span class=\"string\">&quot;^1.0.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo-tag-aplayer&quot;</span>: <span class=\"string\">&quot;^3.0.4&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;hexo-wordcount&quot;</span>: <span class=\"string\">&quot;^6.0.1&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;imagemin&quot;</span>: <span class=\"string\">&quot;^7.0.1&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;npm-check&quot;</span>: <span class=\"string\">&quot;^5.9.2&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;terser&quot;</span>: <span class=\"string\">&quot;^4.8.0&quot;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">&quot;devDependencies&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">&quot;gulp&quot;</span>: <span class=\"string\">&quot;^4.0.2&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;gulp-clean-css&quot;</span>: <span class=\"string\">&quot;^4.3.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;gulp-htmlclean&quot;</span>: <span class=\"string\">&quot;^2.7.22&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;gulp-imagemin&quot;</span>: <span class=\"string\">&quot;^7.1.0&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;gulp-uglify&quot;</span>: <span class=\"string\">&quot;^3.0.2&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">&quot;workbox-build&quot;</span>: <span class=\"string\">&quot;^5.1.3&quot;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"备份方式\"><a href=\"#备份方式\" class=\"headerlink\" title=\"备份方式\"></a>备份方式</h3><p>不能在一棵树上吊死，所以我选择了多平台备份，分别是Github,Gitee,Coding三个平台，多一个平台，多一份保障，这里注册账号实名认证什么的不再赘述，大家应该都会，注意的一点就是我们建的仓库选择**<code>私有仓库</code>**，不然别人把你md一拷走，就成别人的的了，不过大多数人比较自觉，我们这静态博客，F12源码什么的也看的清清楚楚，爬走很简单，主要靠自觉，防止转载（其实无所谓，秉着开源共享的理念，其实标明出处大家也就不会特别在意）</p>\n<p>首先在博客<code>根目录</code>使用以下命令初始化本地仓库添加一个远程仓库</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>如果本地未显示.git文件夹，请注意打开显示隐藏文件夹</p>\n</blockquote>\n<p>然后运行 <code>git remote add &lt;shortname&gt; &lt;url&gt;</code> 添加一个新的远程 Git 仓库，同时指定一个方便使用的简写：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git remote add &lt;shortname&gt; &lt;url&gt;</span><br></pre></td></tr></table></figure>\n\n<p>比如 <code>git remote add origin git@github.com:CCKNBC/Hexo.git</code>，添加多个仓库地址等更多操作请参考**<a href=\"%5Bhttps://git-scm.com/book/zh/v2/Git-%E5%9F%BA%E7%A1%80-%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8%5D(https://git-scm.com/book/zh/v2/Git-%E5%9F%BA%E7%A1%80-%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%E7%9A%84%E4%BD%BF%E7%94%A8)\">Git-基础-远程仓库的使用</a>**，按照个人喜好来添加多个仓库地址，我这里全部使用的origin,通过手动添加了coding,gitee的仓库地址，不影响使用就行</p>\n<p>然后我们运行<code>git remote -v</code>查看一下结果，是自己想要的即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">origin  git@github.com:CCKNBC&#x2F;Hexo.git (fetch)</span><br><span class=\"line\">origin  git@github.com:CCKNBC&#x2F;Hexo.git (push)</span><br><span class=\"line\">origin  git@e.coding.net:ccknbc&#x2F;blog&#x2F;source.git (push)</span><br><span class=\"line\">origin  git@gitee.com:ccknbc&#x2F;blog.git (push)</span><br></pre></td></tr></table></figure>\n\n<p>然后我们就可以推送对应的内容了</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git pull</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit -m <span class=\"string\">&quot;%date% %time%: Updated By CCKNBC Local&quot;</span></span><br><span class=\"line\">git push origin -u</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>上面<code>git push origin -u</code>这个是因为第一次推送，我们采取强制推送，如果还是不行我们<code>git push origin -f</code>（因为是第一次无所谓，以后请不要随意使用-f），以后我们只需要<code>git push</code>即可，同时commit的内容请根据实际需要自行修改</p>\n</blockquote>\n<p>以下是我的<code>.git/config</code>一览,设置好后你可以更换你的第一个url，也就是fetch仓库，根据个人喜好来（或者说网络原因），下面使用的是github的，那么git pull等操作就会按照这个仓库来和本地做比较，选择一个连接比较快的就好</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">[core]</span><br><span class=\"line\">    repositoryformatversion &#x3D; 0</span><br><span class=\"line\">    filemode &#x3D; false</span><br><span class=\"line\">    bare &#x3D; false</span><br><span class=\"line\">    logallrefupdates &#x3D; true</span><br><span class=\"line\">    symlinks &#x3D; false</span><br><span class=\"line\">    ignorecase &#x3D; true</span><br><span class=\"line\">[remote &quot;origin&quot;]</span><br><span class=\"line\">    url &#x3D; git@github.com:CCKNBC&#x2F;Hexo.git</span><br><span class=\"line\">    fetch &#x3D; +refs&#x2F;heads&#x2F;*:refs&#x2F;remotes&#x2F;origin&#x2F;*</span><br><span class=\"line\">    url &#x3D; git@e.coding.net:ccknbc&#x2F;blog&#x2F;source.git</span><br><span class=\"line\">    url &#x3D; git@gitee.com:ccknbc&#x2F;blog.git</span><br><span class=\"line\">[branch &quot;master&quot;]</span><br><span class=\"line\">    remote &#x3D; origin</span><br><span class=\"line\">    merge &#x3D; refs&#x2F;heads&#x2F;master</span><br></pre></td></tr></table></figure>\n\n<p>在上面的添加多个仓库中，个人因为懒的输入命令，所以直接手动添加的下面两行，反正目的达到就行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">url = git@e.coding.net:ccknbc/blog/source.git</span><br><span class=\"line\">url = git@gitee.com:ccknbc/blog.git</span><br></pre></td></tr></table></figure>\n<p>然后在配置好公钥的情况下，强制推送即可，至此，你的博客源文件已经推送至你的备份仓库，可以去查看是否有一条强制推送的commit记录了，同时检查是否有<code>theme</code>文件夹（因为涉及到后面的魔改，部分源文件修改，因此我们也做好备份），如果没有，检查主题文件夹是否有<code>.git</code>文件夹，删掉后再次推送即可</p>\n<h2 id=\"如何优雅的魔改\"><a href=\"#如何优雅的魔改\" class=\"headerlink\" title=\"如何优雅的魔改\"></a>如何优雅的魔改</h2><p>在不动主题源文件方便日后升级的情况下，我们大部分采用外部引入css,js的方式实现，同时上传至github，借用jsDelivr提供的CDN加速服务快速引用</p>\n<p>在博客根目录<code>source</code>文件夹下新建一个<code>xxx.js</code>和<code>xxx.css</code>，名字自己取就行，最后我们正确引入即可，在主题配置文件<code>butterfly.yml</code>（下文将直接简写根配（根目录的_confg.yml），主配（主题配置<code>source</code>目录下的butterfly.yml））搜索inject,然后在以下位置插入对应的css和js即可，例如，我是存放在主题文件夹子文件夹css和js内</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">inject:</span> </span><br><span class=\"line\">  <span class=\"attr\">head:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">&lt;link</span> <span class=\"string\">rel=&quot;stylesheet&quot;</span> <span class=\"string\">href=&quot;https://cdn.jsdelivr.net/gh/CCKNBC/ccknbc.github.io@latest/css/ccknbc.css&quot;&gt;</span></span><br><span class=\"line\">  <span class=\"attr\">bottom:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">&lt;script</span> <span class=\"string\">src=&quot;https://cdn.jsdelivr.net/gh/CCKNBC/ccknbc.github.io@latest/js/ccknbc.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>所以按照上面所说的对应的你的链接即为，其中<code>your name</code>是你的github用户名，请注意根据具体路径变通</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;your name&#x2F;your name.github.io@latest&#x2F;xxx.css</span><br><span class=\"line\">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;your name&#x2F;your namec.github.io@latests&#x2F;xxx.js</span><br></pre></td></tr></table></figure>\n\n<p>若是本地预览就可使用（请根据路径自己修改）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x2F;css&#x2F;ccknbc.css</span><br><span class=\"line\">&#x2F;js&#x2F;ccknbc.js</span><br></pre></td></tr></table></figure>\n\n<p>接下来分别编辑css和js文件即可，当然你可以直接复制粘贴或者直接引用我的链接</p>\n<p><strong><code>css</code></strong></p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@font-face</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-family</span>: <span class=\"string\">&#x27;sleek&#x27;</span>;</span><br><span class=\"line\">    <span class=\"attribute\">src</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;https://cdn.jsdelivr.net/gh/lete114/CDN2/zaxiang/sleek.woff2&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*标题颜色修改*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#page-header</span> <span class=\"selector-id\">#site_title</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#8FBC8F</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#page-header</span> <span class=\"selector-id\">#site-name</span><span class=\"selector-class\">.blog_title</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#8FBC8F</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 滚动条 */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-pseudo\">::-webkit-scrollbar</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-pseudo\">::-webkit-scrollbar-thumb</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#8FBC8F</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-image</span>: <span class=\"built_in\">-webkit-linear-gradient</span>( <span class=\"number\">45deg</span>, rgba(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">0.4</span>) <span class=\"number\">25%</span>, transparent <span class=\"number\">25%</span>, transparent <span class=\"number\">50%</span>, <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">0.4</span>) <span class=\"number\">50%</span>, <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">0.4</span>) <span class=\"number\">75%</span>, transparent <span class=\"number\">75%</span>, transparent);</span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">2em</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-pseudo\">::-webkit-scrollbar-corner</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: transparent;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-pseudo\">::-moz-selection</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#8FBC8F</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#web_bg</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"built_in\">-webkit-linear-gradient</span>(</span><br><span class=\"line\">      <span class=\"number\">0deg</span>,</span><br><span class=\"line\">      rgba(<span class=\"number\">247</span>, <span class=\"number\">149</span>, <span class=\"number\">51</span>, <span class=\"number\">0.1</span>) <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">243</span>, <span class=\"number\">112</span>, <span class=\"number\">85</span>, <span class=\"number\">0.1</span>) <span class=\"number\">15%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">239</span>, <span class=\"number\">78</span>, <span class=\"number\">123</span>, <span class=\"number\">0.1</span>) <span class=\"number\">30%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">161</span>, <span class=\"number\">102</span>, <span class=\"number\">171</span>, <span class=\"number\">0.1</span>) <span class=\"number\">44%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">80</span>, <span class=\"number\">115</span>, <span class=\"number\">184</span>, <span class=\"number\">0.1</span>) <span class=\"number\">58%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">16</span>, <span class=\"number\">152</span>, <span class=\"number\">173</span>, <span class=\"number\">0.1</span>) <span class=\"number\">72%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">7</span>, <span class=\"number\">179</span>, <span class=\"number\">155</span>, <span class=\"number\">0.1</span>) <span class=\"number\">86%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">109</span>, <span class=\"number\">186</span>, <span class=\"number\">130</span>, <span class=\"number\">0.1</span>) <span class=\"number\">100%</span></span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"built_in\">-moz-linear-gradient</span>(</span><br><span class=\"line\">      <span class=\"number\">0deg</span>,</span><br><span class=\"line\">      rgba(<span class=\"number\">247</span>, <span class=\"number\">149</span>, <span class=\"number\">51</span>, <span class=\"number\">0.1</span>) <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">243</span>, <span class=\"number\">112</span>, <span class=\"number\">85</span>, <span class=\"number\">0.1</span>) <span class=\"number\">15%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">239</span>, <span class=\"number\">78</span>, <span class=\"number\">123</span>, <span class=\"number\">0.1</span>) <span class=\"number\">30%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">161</span>, <span class=\"number\">102</span>, <span class=\"number\">171</span>, <span class=\"number\">0.1</span>) <span class=\"number\">44%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">80</span>, <span class=\"number\">115</span>, <span class=\"number\">184</span>, <span class=\"number\">0.1</span>) <span class=\"number\">58%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">16</span>, <span class=\"number\">152</span>, <span class=\"number\">173</span>, <span class=\"number\">0.1</span>) <span class=\"number\">72%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">7</span>, <span class=\"number\">179</span>, <span class=\"number\">155</span>, <span class=\"number\">0.1</span>) <span class=\"number\">86%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">109</span>, <span class=\"number\">186</span>, <span class=\"number\">130</span>, <span class=\"number\">0.1</span>) <span class=\"number\">100%</span></span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"built_in\">-o-linear-gradient</span>(</span><br><span class=\"line\">      <span class=\"number\">0deg</span>,</span><br><span class=\"line\">      rgba(<span class=\"number\">247</span>, <span class=\"number\">149</span>, <span class=\"number\">51</span>, <span class=\"number\">0.1</span>) <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">243</span>, <span class=\"number\">112</span>, <span class=\"number\">85</span>, <span class=\"number\">0.1</span>) <span class=\"number\">15%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">239</span>, <span class=\"number\">78</span>, <span class=\"number\">123</span>, <span class=\"number\">0.1</span>) <span class=\"number\">30%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">161</span>, <span class=\"number\">102</span>, <span class=\"number\">171</span>, <span class=\"number\">0.1</span>) <span class=\"number\">44%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">80</span>, <span class=\"number\">115</span>, <span class=\"number\">184</span>, <span class=\"number\">0.1</span>) <span class=\"number\">58%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">16</span>, <span class=\"number\">152</span>, <span class=\"number\">173</span>, <span class=\"number\">0.1</span>) <span class=\"number\">72%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">7</span>, <span class=\"number\">179</span>, <span class=\"number\">155</span>, <span class=\"number\">0.1</span>) <span class=\"number\">86%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">109</span>, <span class=\"number\">186</span>, <span class=\"number\">130</span>, <span class=\"number\">0.1</span>) <span class=\"number\">100%</span></span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"built_in\">-ms-linear-gradient</span>(</span><br><span class=\"line\">      <span class=\"number\">0deg</span>,</span><br><span class=\"line\">      rgba(<span class=\"number\">247</span>, <span class=\"number\">149</span>, <span class=\"number\">51</span>, <span class=\"number\">0.1</span>) <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">243</span>, <span class=\"number\">112</span>, <span class=\"number\">85</span>, <span class=\"number\">0.1</span>) <span class=\"number\">15%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">239</span>, <span class=\"number\">78</span>, <span class=\"number\">123</span>, <span class=\"number\">0.1</span>) <span class=\"number\">30%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">161</span>, <span class=\"number\">102</span>, <span class=\"number\">171</span>, <span class=\"number\">0.1</span>) <span class=\"number\">44%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">80</span>, <span class=\"number\">115</span>, <span class=\"number\">184</span>, <span class=\"number\">0.1</span>) <span class=\"number\">58%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">16</span>, <span class=\"number\">152</span>, <span class=\"number\">173</span>, <span class=\"number\">0.1</span>) <span class=\"number\">72%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">7</span>, <span class=\"number\">179</span>, <span class=\"number\">155</span>, <span class=\"number\">0.1</span>) <span class=\"number\">86%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">109</span>, <span class=\"number\">186</span>, <span class=\"number\">130</span>, <span class=\"number\">0.1</span>) <span class=\"number\">100%</span></span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"built_in\">linear-gradient</span>(</span><br><span class=\"line\">      <span class=\"number\">90deg</span>,</span><br><span class=\"line\">      rgba(<span class=\"number\">247</span>, <span class=\"number\">149</span>, <span class=\"number\">51</span>, <span class=\"number\">0.1</span>) <span class=\"number\">0</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">243</span>, <span class=\"number\">112</span>, <span class=\"number\">85</span>, <span class=\"number\">0.1</span>) <span class=\"number\">15%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">239</span>, <span class=\"number\">78</span>, <span class=\"number\">123</span>, <span class=\"number\">0.1</span>) <span class=\"number\">30%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">161</span>, <span class=\"number\">102</span>, <span class=\"number\">171</span>, <span class=\"number\">0.1</span>) <span class=\"number\">44%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">80</span>, <span class=\"number\">115</span>, <span class=\"number\">184</span>, <span class=\"number\">0.1</span>) <span class=\"number\">58%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">16</span>, <span class=\"number\">152</span>, <span class=\"number\">173</span>, <span class=\"number\">0.1</span>) <span class=\"number\">72%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">7</span>, <span class=\"number\">179</span>, <span class=\"number\">155</span>, <span class=\"number\">0.1</span>) <span class=\"number\">86%</span>,</span><br><span class=\"line\">      <span class=\"built_in\">rgba</span>(<span class=\"number\">109</span>, <span class=\"number\">186</span>, <span class=\"number\">130</span>, <span class=\"number\">0.1</span>) <span class=\"number\">100%</span></span><br><span class=\"line\">    );</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.layout_post</span>&gt;<span class=\"selector-id\">#post</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">255</span>,.<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 鼠标图标 */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">cursor</span>: <span class=\"built_in\">url</span>(https://cdn.jsdelivr.net/gh/lete114/CDN@<span class=\"number\">1.0</span>/Use/Jkll8I.png), auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*a标签*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">cursor</span>: <span class=\"built_in\">url</span>(https://cdn.jsdelivr.net/gh/lete114/CDN@<span class=\"number\">1.0</span>/Use/JkuClT.png), auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*按钮*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">button</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">cursor</span>: <span class=\"built_in\">url</span>(https://cdn.jsdelivr.net/gh/lete114/CDN@<span class=\"number\">1.0</span>/Use/JkuClT.png), auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*i标签*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">i</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">cursor</span>: <span class=\"built_in\">url</span>(https://cdn.jsdelivr.net/gh/lete114/CDN@<span class=\"number\">1.0</span>/Use/JkuClT.png), auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*页脚a标签*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* #footer-wrap a:hover &#123;</span></span><br><span class=\"line\"><span class=\"comment\">    text-decoration: none;</span></span><br><span class=\"line\"><span class=\"comment\">    cursor: url(https://cdn.jsdelivr.net/gh/lete114/CDN@1.0/Use/JkuClT.png), auto;</span></span><br><span class=\"line\"><span class=\"comment\">&#125; */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*分页器*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#pagination</span> <span class=\"selector-class\">.page-number</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">cursor</span>: <span class=\"built_in\">url</span>(https://cdn.jsdelivr.net/gh/lete114/CDN@<span class=\"number\">1.0</span>/Use/JkuClT.png), auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*头部的导航栏*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#nav</span> <span class=\"selector-class\">.site-page</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">cursor</span>: <span class=\"built_in\">url</span>(https://cdn.jsdelivr.net/gh/lete114/CDN@<span class=\"number\">1.0</span>/Use/JkuClT.png), auto;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* a(链接)标签的默认颜色 */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 宽度大于800小于9999执行 */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* @media only screen and (min-width: 800px) and (max-width: 9999px) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">    </span></span><br><span class=\"line\"><span class=\"comment\">    #article-container a &#123;</span></span><br><span class=\"line\"><span class=\"comment\">        color: #00c4b6;</span></span><br><span class=\"line\"><span class=\"comment\">        display: inline-block;</span></span><br><span class=\"line\"><span class=\"comment\">        position: relative;</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">&#125; */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 打造效果渐变 */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@-webkit-keyframes</span> Gradient &#123;</span><br><span class=\"line\">    0% &#123;</span><br><span class=\"line\">        <span class=\"attribute\">background-position</span>: <span class=\"number\">0</span> <span class=\"number\">50%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    50% &#123;</span><br><span class=\"line\">        <span class=\"attribute\">background-position</span>: <span class=\"number\">100%</span> <span class=\"number\">50%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    100% &#123;</span><br><span class=\"line\">        <span class=\"attribute\">background-position</span>: <span class=\"number\">0</span> <span class=\"number\">50%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@-moz-keyframes</span> Gradient &#123;</span><br><span class=\"line\">    0% &#123;</span><br><span class=\"line\">        <span class=\"attribute\">background-position</span>: <span class=\"number\">0</span> <span class=\"number\">50%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    50% &#123;</span><br><span class=\"line\">        <span class=\"attribute\">background-position</span>: <span class=\"number\">100%</span> <span class=\"number\">50%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    100% &#123;</span><br><span class=\"line\">        <span class=\"attribute\">background-position</span>: <span class=\"number\">0</span> <span class=\"number\">50%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@keyframes</span> Gradient &#123;</span><br><span class=\"line\">    0% &#123;</span><br><span class=\"line\">        <span class=\"attribute\">background-position</span>: <span class=\"number\">0</span> <span class=\"number\">50%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    50% &#123;</span><br><span class=\"line\">        <span class=\"attribute\">background-position</span>: <span class=\"number\">100%</span> <span class=\"number\">50%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    100% &#123;</span><br><span class=\"line\">        <span class=\"attribute\">background-position</span>: <span class=\"number\">0</span> <span class=\"number\">50%</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#subtitle</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"built_in\">linear-gradient</span>(-<span class=\"number\">45deg</span>, #ffecd2, #fcb69f, #<span class=\"number\">84</span>fab0, #<span class=\"number\">8</span>fd3f4,#fddb92,#d1fdff,#e4afcb,#<span class=\"number\">7</span>edbdc,#eea2a2,#<span class=\"number\">7</span>ac5d8);</span><br><span class=\"line\">    <span class=\"attribute\">background-size</span>: <span class=\"number\">400%</span> <span class=\"number\">400%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-animation</span>: Gradient <span class=\"number\">10s</span> ease infinite;</span><br><span class=\"line\">    <span class=\"attribute\">-moz-animation</span>: Gradient <span class=\"number\">10s</span> ease infinite;</span><br><span class=\"line\">    <span class=\"attribute\">animation</span>: Gradient <span class=\"number\">10s</span> ease infinite;</span><br><span class=\"line\">    <span class=\"attribute\">-o-user-select</span>: none;</span><br><span class=\"line\">    <span class=\"attribute\">-ms-user-select</span>: none;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-user-select</span>: none;</span><br><span class=\"line\">    <span class=\"attribute\">-moz-user-select</span>: none;</span><br><span class=\"line\">    <span class=\"attribute\">user-select</span>: none;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-background-clip</span>: text;</span><br><span class=\"line\">    <span class=\"attribute\">-webkit-text-fill-color</span>: transparent;</span><br><span class=\"line\">    <span class=\"attribute\">border-top-left-radius</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-top-right-radius</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-id\">#subtitle</span><span class=\"selector-pseudo\">:before</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong><code>js</code></strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 设置页脚博主会动的心</span></span><br><span class=\"line\">$(<span class=\"built_in\">document</span>).ready(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">    $(<span class=\"string\">&#x27;.copyright&#x27;</span>).html(<span class=\"string\">&#x27;©2020 &lt;i style=&quot;color:#49B1F5;animation: announ_animation 0.8s linear infinite;&quot; class=&quot;fa fa-heartbeat&quot;&gt;&lt;/i&gt; CC康纳百川&#x27;</span>);</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(aidaori())&#123;</span><br><span class=\"line\">    $(<span class=\"string\">&quot;html&quot;</span>).css(&#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;filter&quot;</span>:<span class=\"string\">&quot;gray !important&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;filter&quot;</span>:<span class=\"string\">&quot;progid:DXImageTransform.Microsoft.BasicImage(grayscale=1)&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;filter&quot;</span>:<span class=\"string\">&quot;grayscale(100%)&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;-webkit-filter&quot;</span>:<span class=\"string\">&quot;grayscale(100%)&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;-moz-filter&quot;</span>:<span class=\"string\">&quot;grayscale(100%)&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;-ms-filter&quot;</span>:<span class=\"string\">&quot;grayscale(100%)&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;-o-filter&quot;</span>:<span class=\"string\">&quot;grayscale(100%)&quot;</span> </span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//在特定日期变灰</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">aidaori</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> aidaoriarr=<span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(<span class=\"string\">&quot;0403&quot;</span>,<span class=\"string\">&quot;0404&quot;</span>,<span class=\"string\">&quot;0405&quot;</span>,<span class=\"string\">&quot;0406&quot;</span>,<span class=\"string\">&quot;0414&quot;</span>,<span class=\"string\">&quot;0512&quot;</span>,<span class=\"string\">&quot;0807&quot;</span>,<span class=\"string\">&quot;0909&quot;</span>,<span class=\"string\">&quot;1213&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">//2020年4月4日 新冠肺炎哀悼日，清明节</span></span><br><span class=\"line\">    <span class=\"comment\">//2010年4月14日，青海玉树地震</span></span><br><span class=\"line\">    <span class=\"comment\">//2008年5月12日，四川汶川地震</span></span><br><span class=\"line\">    <span class=\"comment\">//2010年8月7日，甘肃舟曲特大泥石流</span></span><br><span class=\"line\">    <span class=\"comment\">//1976年9月9日，毛泽东逝世</span></span><br><span class=\"line\">    <span class=\"comment\">//1937年12月13日，南京大屠杀</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> mydate = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> str = <span class=\"string\">&quot;&quot;</span>;<span class=\"comment\">// + mydate.getFullYear();</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> mm = mydate.getMonth()+<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(mydate.getMonth()&gt;<span class=\"number\">9</span>)&#123;</span><br><span class=\"line\">      str += mm;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">      str += <span class=\"string\">&quot;0&quot;</span> + mm;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(mydate.getDate()&gt;<span class=\"number\">9</span>)&#123;</span><br><span class=\"line\">      str += mydate.getDate();</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">      str += <span class=\"string\">&quot;0&quot;</span> + mydate.getDate();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(aidaoriarr.indexOf(str)&gt;<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 可爱的Title</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> OriginTitle = <span class=\"built_in\">document</span>.title;</span><br><span class=\"line\"><span class=\"keyword\">var</span> titleTime;</span><br><span class=\"line\"><span class=\"built_in\">document</span>.addEventListener(<span class=\"string\">&#x27;visibilitychange&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">document</span>.hidden) &#123;</span><br><span class=\"line\">        $(<span class=\"string\">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).attr(<span class=\"string\">&#x27;href&#x27;</span>, <span class=\"string\">&quot;https://cdn.jsdelivr.net/gh/CCKNBC/CDN/logo/ccknbc.png&quot;</span>);</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.title = <span class=\"string\">&#x27;(つェ⊂) 我藏好了哦~~&#x27;</span>;</span><br><span class=\"line\">        <span class=\"built_in\">clearTimeout</span>(titleTime);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        $(<span class=\"string\">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).attr(<span class=\"string\">&#x27;href&#x27;</span>, <span class=\"string\">&quot;https://cdn.jsdelivr.net/gh/CCKNBC/CDN/logo/favicon.svg&quot;</span>);</span><br><span class=\"line\">        <span class=\"built_in\">document</span>.title = <span class=\"string\">&#x27;(*´∇｀*) 被你发现啦~~&#x27;</span> + OriginTitle;</span><br><span class=\"line\">        titleTime = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">document</span>.title = OriginTitle;</span><br><span class=\"line\">        &#125;, <span class=\"number\">2000</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>更多类容可以百度，自己DIY，有想法当然要实现啊</p>\n<hr>\n<h2 id=\"未完待续…\"><a href=\"#未完待续…\" class=\"headerlink\" title=\"未完待续…\"></a>未完待续…</h2>",
            "tags": [
                "HEXO"
            ]
        },
        {
            "id": "https://ccknbc.github.io/posts/2.html",
            "url": "https://ccknbc.github.io/posts/2.html",
            "title": "生产实习",
            "date_published": "2020-06-29T13:00:00.000Z",
            "content_html": "<p><strong>等待更新中 时间为整点定时发布</strong></p>\n<blockquote>\n<p><strong>待同步</strong> <strong>取消加密</strong></p>\n<p><strong>图片还未上传至图床</strong></p>\n<p><strong>视频嵌入还未做好 YouTube已OK</strong> </p>\n<p><strong>目录在左侧</strong></p>\n</blockquote>\n<h5 id=\"超声波及温度传感摇摆风扇\"><a href=\"#超声波及温度传感摇摆风扇\" class=\"headerlink\" title=\"超声波及温度传感摇摆风扇\"></a><strong>超声波及温度传感摇摆风扇</strong></h5><h6 id=\"所用元件：\"><a href=\"#所用元件：\" class=\"headerlink\" title=\"所用元件：\"></a><strong>所用元件：</strong></h6><p>UNO R3开发板 ×1</p>\n<p>大面包板 ×1</p>\n<p>舵机 ×1 </p>\n<p>舵机支架 ×1</p>\n<p>电位器 ×1</p>\n<p>1k电阻 ×1</p>\n<p>USB数据线 ×1</p>\n<p>小风扇 ×1</p>\n<p>摇头风扇支架组件 ×1</p>\n<p>ULN2003AN驱动芯片 ×1</p>\n<p>三色LED ×1</p>\n<p>鳄鱼夹 ×2</p>\n<p>面包线 若干</p>\n<h6 id=\"开发环境：Arduino-IDE-Mind\"><a href=\"#开发环境：Arduino-IDE-Mind\" class=\"headerlink\" title=\"开发环境：Arduino IDE,Mind+\"></a><strong>开发环境：</strong>Arduino IDE,Mind+</h6><h6 id=\"预期要求：\"><a href=\"#预期要求：\" class=\"headerlink\" title=\"预期要求：\"></a><strong>预期要求：</strong></h6><p>通过超声波测距和温度传感控制舵机是否旋转，当距离小于30cm或温度大于30℃时在设定的角度之间来回旋转；通过电位器控制电机，小风扇旋转的快慢。</p>\n<h6 id=\"大致设计思路：\"><a href=\"#大致设计思路：\" class=\"headerlink\" title=\"大致设计思路：\"></a><strong>大致设计思路：</strong></h6><h6 id=\"具体实现源代码：\"><a href=\"#具体实现源代码：\" class=\"headerlink\" title=\"具体实现源代码：\"></a><strong>具体实现源代码：</strong></h6><figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//引入库文件</span></span><br><span class=\"line\">\\<span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;Servo.h&gt;//舵机库，之间要有空格，否则编译时会报错。</span></span></span><br><span class=\"line\">\\<span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;Wire.h&gt; //是I2C通讯的，Arduino和I2C设备通讯使用的(SCLK DIN RCLK) </span></span></span><br><span class=\"line\"><span class=\"comment\">//以下为函数声明</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">zhuan</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">buzhuan</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">chaoshengbo</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">wendu</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\"><span class=\"comment\">//以下为变量声明及初始声明</span></span><br><span class=\"line\">Servo myservo;<span class=\"comment\">//定义舵机变量名</span></span><br><span class=\"line\"><span class=\"keyword\">unsigned</span> <span class=\"keyword\">char</span> jiao;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> P=A0;<span class=\"comment\">//电位器输入引脚</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> U=<span class=\"number\">8</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> sensorValue=<span class=\"number\">0</span>;<span class=\"comment\">//电位器电压值</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> outputValue=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"comment\">// 设定SR04连接的Arduino引脚</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> TrigPin = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"keyword\">int</span> EchoPin = <span class=\"number\">11</span>;</span><br><span class=\"line\"><span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> distance;</span><br><span class=\"line\"><span class=\"keyword\">int</span> temp;<span class=\"comment\">//温度</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> tol;<span class=\"comment\">//校对码</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> j;</span><br><span class=\"line\"><span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> loopCnt;</span><br><span class=\"line\"><span class=\"keyword\">int</span> chr[<span class=\"number\">40</span>] = &#123;<span class=\"number\">0</span>&#125;;<span class=\"comment\">//创建数字数组，用来存放40个bit</span></span><br><span class=\"line\"><span class=\"keyword\">unsigned</span> <span class=\"keyword\">long</span> time;</span><br><span class=\"line\">\\<span class=\"meta\">#<span class=\"meta-keyword\">define</span> pin 2</span></span><br><span class=\"line\"><span class=\"comment\">//以下为主函数部分</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setup</span><span class=\"params\">()</span> <span class=\"comment\">//初始设定</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"> myservo.attach(<span class=\"number\">9</span>);<span class=\"comment\">//定义舵机接口</span></span><br><span class=\"line\"> Serial.begin(<span class=\"number\">9600</span>);<span class=\"comment\">//设定波特率为9600 </span></span><br><span class=\"line\"> pinMode(TrigPin, OUTPUT);<span class=\"comment\">// 要检测引脚上输入的脉冲宽度，需要先设置为输入状态</span></span><br><span class=\"line\"> pinMode(EchoPin, INPUT);</span><br><span class=\"line\"> Serial.println(<span class=\"string\">&quot;Ultrasonic sensor:&quot;</span>);</span><br><span class=\"line\"> buzhuan();</span><br><span class=\"line\"> chaoshengbo();</span><br><span class=\"line\"> wendu();</span><br><span class=\"line\"> &#125; </span><br><span class=\"line\"><span class=\"comment\">//以下为循环执行部分</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">loop</span><span class=\"params\">()</span> </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"> chaoshengbo();</span><br><span class=\"line\"> wendu();</span><br><span class=\"line\"> delay(<span class=\"number\">500</span>);</span><br><span class=\"line\"> <span class=\"keyword\">if</span> ((distance&lt;<span class=\"number\">30</span>) || (temp&gt;<span class=\"number\">30</span>)) </span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">  digitalWrite(<span class=\"number\">4</span>, LOW);<span class=\"comment\">//红灯灭，代表舵机未旋转</span></span><br><span class=\"line\">  digitalWrite(<span class=\"number\">7</span>, HIGH);<span class=\"comment\">//绿灯亮，代表舵机开始旋转</span></span><br><span class=\"line\">  zhuan();</span><br><span class=\"line\">  chaoshengbo();</span><br><span class=\"line\">  wendu();</span><br><span class=\"line\">  delay(<span class=\"number\">500</span>);</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>((distance&gt;<span class=\"number\">30</span>) || (temp&lt;<span class=\"number\">30</span>))</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">  buzhuan();</span><br><span class=\"line\">  chaoshengbo();</span><br><span class=\"line\">  wendu();</span><br><span class=\"line\">  delay(<span class=\"number\">500</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//以下为函数定义部分</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">zhuan</span><span class=\"params\">()</span><span class=\"comment\">//定义舵机转</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"> myservo.write(jiao);</span><br><span class=\"line\"> sensorValue=analogRead(P);</span><br><span class=\"line\"> outputValue=<span class=\"built_in\">map</span>(sensorValue,<span class=\"number\">0</span>,<span class=\"number\">1023</span>,<span class=\"number\">0</span>,<span class=\"number\">255</span>);</span><br><span class=\"line\"> analogWrite(U,outputValue);</span><br><span class=\"line\"> <span class=\"keyword\">for</span>(jiao=<span class=\"number\">30</span>;jiao&lt;<span class=\"number\">150</span>;jiao++)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">   myservo.write(jiao);<span class=\"comment\">//设置舵机旋转的角度 </span></span><br><span class=\"line\">   delay(<span class=\"number\">10</span>);  </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span>(jiao=<span class=\"number\">150</span>;jiao&gt;<span class=\"number\">30</span>;jiao--)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">   myservo.write(jiao);<span class=\"comment\">//设置舵机旋转的角度 </span></span><br><span class=\"line\">   delay(<span class=\"number\">10</span>);  </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">buzhuan</span><span class=\"params\">()</span><span class=\"comment\">//定义舵机不转</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"> digitalWrite(TrigPin, LOW);</span><br><span class=\"line\"> delayMicroseconds(<span class=\"number\">2</span>);</span><br><span class=\"line\"> myservo.write(jiao);</span><br><span class=\"line\"> digitalWrite(<span class=\"number\">4</span>, HIGH);</span><br><span class=\"line\"> digitalWrite(<span class=\"number\">7</span>, LOW);</span><br><span class=\"line\"> sensorValue=analogRead(P);</span><br><span class=\"line\"> outputValue=<span class=\"built_in\">map</span>(sensorValue,<span class=\"number\">0</span>,<span class=\"number\">1023</span>,<span class=\"number\">0</span>,<span class=\"number\">255</span>);</span><br><span class=\"line\"> analogWrite(U,outputValue);</span><br><span class=\"line\"> myservo.write(jiao); </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">chaoshengbo</span><span class=\"params\">()</span><span class=\"comment\">//定义超声波测距</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"> <span class=\"comment\">// 产生一个10us的高脉冲去触发TrigPin</span></span><br><span class=\"line\"> digitalWrite(TrigPin, LOW);</span><br><span class=\"line\"> delayMicroseconds(<span class=\"number\">2</span>);</span><br><span class=\"line\"> digitalWrite(TrigPin, HIGH);</span><br><span class=\"line\"> delayMicroseconds(<span class=\"number\">10</span>);</span><br><span class=\"line\"> digitalWrite(TrigPin, LOW); <span class=\"comment\">// 检测脉冲宽度，并计算出距离</span></span><br><span class=\"line\"> <span class=\"comment\">//delayMicroseconds(2);</span></span><br><span class=\"line\"> distance = pulseIn(EchoPin, HIGH) / <span class=\"number\">58.00</span>;</span><br><span class=\"line\"> Serial.print(<span class=\"string\">&quot;距离：&quot;</span>);</span><br><span class=\"line\"> Serial.print(distance);</span><br><span class=\"line\"> Serial.print(<span class=\"string\">&quot;cm&quot;</span>);</span><br><span class=\"line\"> Serial.println();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">wendu</span><span class=\"params\">()</span><span class=\"comment\">//定义温度测量</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"> bgn:</span><br><span class=\"line\"> delay(<span class=\"number\">500</span>);</span><br><span class=\"line\"><span class=\"comment\">//设置2号接口模式为：输出</span></span><br><span class=\"line\"><span class=\"comment\">//输出低电平20ms（&gt;18ms）</span></span><br><span class=\"line\"><span class=\"comment\">//输出高电平40μs</span></span><br><span class=\"line\"> pinMode(pin,OUTPUT);</span><br><span class=\"line\"> digitalWrite(pin,LOW);</span><br><span class=\"line\"> delay(<span class=\"number\">20</span>);</span><br><span class=\"line\"> digitalWrite(pin,HIGH);</span><br><span class=\"line\"> delayMicroseconds(<span class=\"number\">40</span>);</span><br><span class=\"line\"> digitalWrite(pin,LOW);</span><br><span class=\"line\"><span class=\"comment\">//设置2号接口模式：输入</span></span><br><span class=\"line\"> pinMode(pin,INPUT);</span><br><span class=\"line\"> <span class=\"comment\">//高电平响应信号 </span></span><br><span class=\"line\"> loopCnt=<span class=\"number\">10000</span>;</span><br><span class=\"line\"> <span class=\"keyword\">while</span>(digitalRead(pin) != HIGH)</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(loopCnt-- == <span class=\"number\">0</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"><span class=\"comment\">//如果长时间不返回高电平，输出个提示，重头开始。</span></span><br><span class=\"line\">   Serial.println(<span class=\"string\">&quot;HIGH&quot;</span>);</span><br><span class=\"line\">   <span class=\"keyword\">goto</span> bgn;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"comment\">//低电平响应信号</span></span><br><span class=\"line\"> loopCnt=<span class=\"number\">30000</span>;</span><br><span class=\"line\"> <span class=\"keyword\">while</span>(digitalRead(pin) != LOW)</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(loopCnt-- == <span class=\"number\">0</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\"><span class=\"comment\">//如果长时间不返回低电平，输出个提示，重头开始。</span></span><br><span class=\"line\">   Serial.println(<span class=\"string\">&quot;LOW&quot;</span>);</span><br><span class=\"line\">   <span class=\"keyword\">goto</span> bgn;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"><span class=\"comment\">//开始读取bit1-40的数值  </span></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">40</span>;i++)</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">while</span>(digitalRead(pin) == LOW)</span><br><span class=\"line\">  &#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">//当出现高电平时，记下时间“time”</span></span><br><span class=\"line\">  time = micros();</span><br><span class=\"line\">  <span class=\"keyword\">while</span>(digitalRead(pin) == HIGH)</span><br><span class=\"line\">  &#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">//当出现低电平，记下时间，再减去刚才储存的time</span></span><br><span class=\"line\"><span class=\"comment\">//得出的值若大于50μs，则为‘1’，否则为‘0’</span></span><br><span class=\"line\"><span class=\"comment\">//并储存到数组里去</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (micros() - time &gt;<span class=\"number\">50</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">   chr[i]=<span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">   chr[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> &#125;  </span><br><span class=\"line\"><span class=\"comment\">//温度，8位的bit，转换为数值</span></span><br><span class=\"line\">temp=chr[<span class=\"number\">16</span>]*<span class=\"number\">128</span>+chr[<span class=\"number\">17</span>]*<span class=\"number\">64</span>+chr[<span class=\"number\">18</span>]*<span class=\"number\">32</span>+chr[<span class=\"number\">19</span>]*<span class=\"number\">16</span>+chr[<span class=\"number\">20</span>]*<span class=\"number\">8</span>+chr[<span class=\"number\">21</span>]*<span class=\"number\">4</span>+chr[<span class=\"number\">22</span>]*<span class=\"number\">2</span>+chr[<span class=\"number\">23</span>];</span><br><span class=\"line\"> <span class=\"comment\">//校对码，8位的bit，转换为数值</span></span><br><span class=\"line\">tol=chr[<span class=\"number\">32</span>]*<span class=\"number\">128</span>+chr[<span class=\"number\">33</span>]*<span class=\"number\">64</span>+chr[<span class=\"number\">34</span>]*<span class=\"number\">32</span>+chr[<span class=\"number\">35</span>]*<span class=\"number\">16</span>+chr[<span class=\"number\">36</span>]*<span class=\"number\">8</span>+chr[<span class=\"number\">37</span>]*<span class=\"number\">4</span>+chr[<span class=\"number\">38</span>]*<span class=\"number\">2</span>+chr[<span class=\"number\">39</span>];</span><br><span class=\"line\"><span class=\"comment\">//输出：温度、湿度、校对码</span></span><br><span class=\"line\">  Serial.print(<span class=\"string\">&quot;温度：&quot;</span>);</span><br><span class=\"line\">  Serial.print(temp);</span><br><span class=\"line\">  Serial.println(<span class=\"string\">&quot;℃&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>串口串口显示情况1，此时温度为28℃，距离为275cm左右，都不满足舵机旋转的条件，红色指示灯常亮。</p>\n<p>对应的实际运行情况如下图所示：</p>\n<p>串口串口显示情况2，串口串口显示情况1，此时温度为28℃，距离为5cm左右，满足舵机旋转的条件，绿色指示灯常亮。</p>\n<p>对应的实际运行情况如下图所示</p>\n<h6 id=\"YouTube：\"><a href=\"#YouTube：\" class=\"headerlink\" title=\"YouTube：\"></a><strong>YouTube：</strong></h6><iframe width=\"900\" height=\"506\" src=\"https://www.youtube.com/embed/hSkkb7gR_kU\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>",
            "tags": [
                "学习",
                "生产实习"
            ]
        },
        {
            "id": "https://ccknbc.github.io/posts/1.html",
            "url": "https://ccknbc.github.io/posts/1.html",
            "title": "基于小波变换的数字水印检测",
            "date_published": "2020-06-09T12:52:00.000Z",
            "content_html": "<p><strong>数字水印技术原理</strong></p>\n<p>数字水印技术实际上就是通过对水印载体的分析、水印信息的处理、水印嵌入点的选择、嵌入方式的设计、嵌入调制的控制和提取检测方法等相关技术环节进行合理优化，寻求满足不可感知性、鲁棒性和安全性等约束条件下的准最优化设计问题。在实际应用中，一个完整水印系统的设计通常包括水印的生成、嵌入、检测和提取四个部分。</p>\n<p><strong>1  水印生成</strong></p>\n<p>通常基于伪随机数发生器或混沌系统来产生水印信号，从水印的鲁棒性和安全性方面来考虑，常常需要对原水印进行预处理来适应水印嵌入贺认。</p>\n<p><strong>2</strong> <strong>水印嵌入</strong></p>\n<p>在尽量保证水印不可感知性的前提下，嵌入最大强度的水印，可提高水印的稳健性。常用的水印嵌入准则有加法准则、乘法准则和融合准则。</p>\n<p><strong>3水印检测</strong></p>\n<p>指判断水印载体中是否存在水印的过程。</p>\n<p><strong>4水印提取</strong></p>\n<p>指水印被比较精确地提取的过程。 水印的提取和检测可以需要原始图像的参与（明检测）， 也可不需要原始图像的参与（盲检测）</p>\n<p><strong>数字水印的分类</strong></p>\n<ul>\n<li>按水印的特性</li>\n<li>鲁棒数字水印：要求嵌入的水印能够经受各种常用的编辑处理</li>\n<li>脆弱数字水印：需要对信号的改动足够敏感，是人们能够根据脆弱水印的状态判断出数据是否被篡改。</li>\n<li>按水印的检测过程</li>\n<li>明文水印：检测工程中，需要原始数据。普遍来讲，鲁棒性较之盲水印要好。</li>\n<li>盲水印：只需要密钥，不需要原始数据</li>\n<li>按水印的内容</li>\n<li>有意义水印：水印是商标、音频片段等</li>\n<li>无意义水印：序列号，仅检测是否含水印</li>\n<li>按水印的隐藏位置</li>\n<li>空域</li>\n<li>频域</li>\n<li>时域</li>\n</ul>\n<p>数字水印技术基本上具有下面几个方面的特点：</p>\n<p>—-<strong>安全性</strong>：数字水印的信息应是安全的，难以篡改或伪造，同时，应当有较低的误检测率，当原内容发生变化时，数字水印应当发生变化，从而可以检测原始数据的变更；当然数字水印同样对重复添加有很强的抵抗性</p>\n<p>—-<strong>隐蔽性</strong>：数字水印应是不可知觉的，而且应不影响被保护数据的正常使用；不会降质；</p>\n<p>—-<strong>鲁棒性</strong>：是指在经历多种无意或有意的信号处理过程后，数字水印仍能保持部分完整性并能被准确鉴别。可能的信号处理过程包括信道噪声、滤波、数/模与模/数转换、重采样、剪切、位移、尺度变化以及有损压缩编码等。</p>\n<p>–<strong>嵌入容量</strong>(embedding capacity)：是指载体在不发生形变的前提下可嵌入的水印信息量。尤其是隐蔽通信领域的特殊性，对水印的容量需求很大。</p>\n<p><img src= \"https://cdn.jsdelivr.net/gh/CCKNBC/ccknbc.github.io@latest/img/loading.gif\" data-lazy-src=\"https://t1.picb.cc/uploads/2020/06/09/tfsmLi.gif\" alt=\"tfsmLi.gif\"></p>\n<p><strong>图1 数字水印嵌入与提取框图</strong></p>\n<p><strong>典型的数字水印算法</strong></p>\n<p><strong>数字水印的技术实现</strong></p>\n<p><strong>空域-LSB</strong></p>\n<p>LSB方法是最简单的嵌入水印的方法。事实上 ，任何一幅 图片都具备一定的容噪性 ，这表现在像素数据的最低有效位(Least Significant Bit，LSB)对 人 眼的视觉影响很 小，秘密信息就隐藏在图像每一个像素的最低位或次低位 ，实现其不 可见性。</p>\n<p><strong>频域</strong></p>\n<p>将图片的灰度强弱，视为图片的频域。通过某种变换手段（傅里叶变换，离散余弦变换，小波变换等）将图像变换到频域（小波域），在频域对图像添加水印，再通过逆变换，将图像转换为空间域。相对于空域手段，频域手段隐匿性更强，抗攻击性更高。</p>\n<p><strong>DCT</strong></p>\n<p>DCT以8x8的像素为单位进行，生成的是8x8的DCT系数数据块。DCT变换的最大特点是对于一般的图像都能够将像块的能量集中于少数低频DCT系数上，即生成8x8DCT系数块中，仅左上角的少量低频系数数值较大，其余系数的数值很小，这样就可能只编码和传输少数系数而不严重影响图像质量。</p>\n<p><strong>小波变换</strong></p>\n<p>“小波”就是小区域、长度有限、均值为0的波形。小波变换就是选择适当的基本小波或母小波ψ(t)，通过对基本小波的平移、伸缩而形成一系列的小波，这簇小波作为基可以构成一系列嵌套的（信号）子空间，然后将欲分析的信号（例如图像）投影到各个大小不同的（信号）子空间之中，以观察相应的特性。这样，就相当于我们用不同的焦距去观察一个物体，可从宏观到微观，从概貌到细节观察得十分详尽。所以小波变换又被称为“数学显微镜”。</p>\n<p><strong>空域+频域</strong></p>\n<p>该算法通过混沌置乱水印图像，建立水印与载体数据之间的Hash单向映射函数，使用两种不同的嵌入方法，先后嵌入水印到空域和DFT域。水印被多次嵌入，实现了水印的盲提取。</p>\n<p><strong>数字水印的应用场景</strong></p>\n<ul>\n<li>多媒体作品盗版追溯：利用数字水印的不可见性，在不影响作品的情况下，加入版权信息的数字水印，可抗击拷贝，剪切。</li>\n<li>证件的防伪认证：如学历证，合同，票据等，携带数字水印后，可通过制定的方式提取水印，验证证件等数字文件是否被涂改；</li>\n<li>阿里事件：阿里追查泄密员工的时间本身，说明，水印可以有效的追溯信息的释放源；</li>\n<li>隐蔽信息传递：水印可携带加密信息后，藏在多媒体文件中传播，并通过特定的提取方式获取水印。可以作为一种隐蔽信息的通信方式。</li>\n</ul>\n<p><strong>源程序代码及部分注释</strong> </p>\n<p><strong>基础设置模块，同时存储着密钥，全局变量 main.m</strong></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">global</span> I ;</span><br><span class=\"line\"><span class=\"keyword\">global</span> W;</span><br><span class=\"line\"><span class=\"keyword\">global</span> P;</span><br><span class=\"line\"><span class=\"keyword\">global</span> Iw;</span><br><span class=\"line\">ntimes=<span class=\"number\">23</span>; <span class=\"comment\">% 秘钥1,Arnold置乱次数</span></span><br><span class=\"line\">rngseed=<span class=\"number\">59433</span>; <span class=\"comment\">% 秘钥2，随机数种子</span></span><br><span class=\"line\">flag=<span class=\"number\">1</span>; <span class=\"comment\">%是否显示图像，0 不显示，1 显示</span></span><br></pre></td></tr></table></figure>\n\n<p> <strong>嵌入水印模块：setdwtwatermark.m</strong></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\">matlabfunction [Iw,psnr]=setdwtwatermark(I,W,ntimes,rngseed,flag)</span><br><span class=\"line\"><span class=\"comment\">%基于小波变换数字水印嵌入</span></span><br><span class=\"line\"><span class=\"comment\">%I：载体图像，灰度图</span></span><br><span class=\"line\"><span class=\"comment\">%W：水印图像，二值图，且长宽相等</span></span><br><span class=\"line\"><span class=\"comment\">%ntimes: 秘钥1,Arnold置乱次数</span></span><br><span class=\"line\">I=imcrop(I,[<span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"built_in\">size</span>(I,<span class=\"number\">2</span>) <span class=\"built_in\">size</span>(I,<span class=\"number\">1</span>)<span class=\"number\">-1</span>]);</span><br><span class=\"line\"><span class=\"built_in\">type</span>=class(I);</span><br><span class=\"line\">I=double(I);</span><br><span class=\"line\">W=logical(W);</span><br><span class=\"line\">[mI,nI]=<span class=\"built_in\">size</span>(I);</span><br><span class=\"line\">[mW,nW]=<span class=\"built_in\">size</span>(W);</span><br><span class=\"line\"><span class=\"keyword\">if</span> mW~=nW</span><br><span class=\"line\">  error(<span class=\"string\">&#x27;SETDWTWATERMARK:ARNOLD&#x27;</span>,<span class=\"string\">&#x27;ARNOLD置乱要求水印图像长宽必须相等！&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">[ca1,ch1,cv1,cd1]=dwt2(I,<span class=\"string\">&#x27;haar&#x27;</span>);</span><br><span class=\"line\">[ca2,ch2,cv2,cd2]=dwt2(ca1,<span class=\"string\">&#x27;haar&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span> flag</span><br><span class=\"line\">  <span class=\"built_in\">figure</span>(<span class=\"string\">&#x27;Name&#x27;</span>,<span class=\"string\">&#x27;载体小波分解&#x27;</span>)</span><br><span class=\"line\">  subplot(<span class=\"number\">121</span>)</span><br><span class=\"line\">  imagesc([wcodemat(ca1),wcodemat(ch1);wcodemat(cv1),wcodemat(cd1)])</span><br><span class=\"line\">  title(<span class=\"string\">&#x27;一级小波分解&#x27;</span>)</span><br><span class=\"line\">  subplot(<span class=\"number\">122</span>)</span><br><span class=\"line\">  imagesc([wcodemat(ca2),wcodemat(ch2);wcodemat(cv2),wcodemat(cd2)])</span><br><span class=\"line\">  title(<span class=\"string\">&#x27;二级小波分解&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">Wa=W;</span><br><span class=\"line\">H=[<span class=\"number\">1</span>,<span class=\"number\">1</span>;<span class=\"number\">1</span>,<span class=\"number\">2</span>]^ntimes; </span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:nW</span><br><span class=\"line\">  <span class=\"keyword\">for</span> <span class=\"built_in\">j</span>=<span class=\"number\">1</span>:nW</span><br><span class=\"line\">​    idx=<span class=\"built_in\">mod</span>(H*[<span class=\"built_in\">i</span><span class=\"number\">-1</span>;<span class=\"built_in\">j</span><span class=\"number\">-1</span>],nW)+<span class=\"number\">1</span>;</span><br><span class=\"line\">​    Wa(idx(<span class=\"number\">1</span>),idx(<span class=\"number\">2</span>))=W(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>);</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span> </span><br><span class=\"line\">flag=<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> flag</span><br><span class=\"line\">  <span class=\"built_in\">figure</span>(<span class=\"string\">&#x27;Name&#x27;</span>,<span class=\"string\">&#x27;水印置乱与嵌入&#x27;</span>)</span><br><span class=\"line\">  subplot(<span class=\"number\">221</span>)</span><br><span class=\"line\">  imshow(W)</span><br><span class=\"line\">  title(<span class=\"string\">&#x27;原始水印&#x27;</span>)</span><br><span class=\"line\">  subplot(<span class=\"number\">222</span>)</span><br><span class=\"line\">  imshow(Wa)</span><br><span class=\"line\">  title([<span class=\"string\">&#x27;置乱水印，变换次数=&#x27;</span>,num2str(ntimes)]);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"comment\">%数字水印嵌入</span></span><br><span class=\"line\">ca2w=ca2;</span><br><span class=\"line\">rng(rngseed);</span><br><span class=\"line\">idx=randperm(<span class=\"built_in\">numel</span>(ca2),<span class=\"built_in\">numel</span>(Wa));</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:<span class=\"built_in\">numel</span>(Wa)</span><br><span class=\"line\">  c=ca2(idx(<span class=\"built_in\">i</span>));</span><br><span class=\"line\">  z=<span class=\"built_in\">mod</span>(c,nW);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> Wa(<span class=\"built_in\">i</span>)</span><br><span class=\"line\">​    <span class=\"keyword\">if</span> z&lt;nW/<span class=\"number\">4</span></span><br><span class=\"line\">​      f=c-nW/<span class=\"number\">4</span>-z;</span><br><span class=\"line\">​    <span class=\"keyword\">else</span></span><br><span class=\"line\">​      f=c+nW*<span class=\"number\">3</span>/<span class=\"number\">4</span>-z;</span><br><span class=\"line\">​    <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">else</span> </span><br><span class=\"line\">​    <span class=\"keyword\">if</span> z&lt;nW*<span class=\"number\">3</span>/<span class=\"number\">4</span></span><br><span class=\"line\">​      f=c+nW/<span class=\"number\">4</span>-z;</span><br><span class=\"line\">​    <span class=\"keyword\">else</span></span><br><span class=\"line\">​      f=c+nW*<span class=\"number\">5</span>/<span class=\"number\">4</span>-z;</span><br><span class=\"line\">​    <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  ca2w(idx(<span class=\"built_in\">i</span>))=f;</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">ca1w=idwt2(ca2w,ch2,cv2,cd2,<span class=\"string\">&#x27;haar&#x27;</span>);</span><br><span class=\"line\">Iw=idwt2(ca1w,ch1,cv1,cd1,<span class=\"string\">&#x27;haar&#x27;</span>);</span><br><span class=\"line\">Iw=Iw(<span class=\"number\">1</span>:mI,<span class=\"number\">1</span>:nI);</span><br><span class=\"line\">mn=<span class=\"built_in\">numel</span>(I);</span><br><span class=\"line\">Imax=<span class=\"built_in\">max</span>(I(:));</span><br><span class=\"line\">psnr=<span class=\"number\">10</span>*<span class=\"built_in\">log10</span>(mn*Imax^<span class=\"number\">2</span>/sum((I(:)-Iw(:)).^<span class=\"number\">2</span>));</span><br><span class=\"line\">I=cast(I,<span class=\"built_in\">type</span>);</span><br><span class=\"line\">Iw=cast(Iw,<span class=\"built_in\">type</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span> flag</span><br><span class=\"line\">  subplot(<span class=\"number\">223</span>)</span><br><span class=\"line\">  imshow(I);</span><br><span class=\"line\">  title(<span class=\"string\">&#x27;原始图像&#x27;</span>)</span><br><span class=\"line\">  subplot(<span class=\"number\">224</span>);</span><br><span class=\"line\">  imshow(Iw);</span><br><span class=\"line\">  title([<span class=\"string\">&#x27;添加水印，PSNR=&#x27;</span>,num2str(psnr)]);</span><br><span class=\"line\"><span class=\"keyword\">end</span> </span><br></pre></td></tr></table></figure>\n\n<p><strong>提取水印模块：getdwtwatermark.m</strong></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">[Wg,nc]</span>=<span class=\"title\">getdwtwatermark</span><span class=\"params\">(Iw,W,P,ntimes,rngseed,flag)</span></span></span><br><span class=\"line\">[mW,nW]=<span class=\"built_in\">size</span>(W);</span><br><span class=\"line\"><span class=\"keyword\">if</span> mW~=nW</span><br><span class=\"line\">  error(<span class=\"string\">&#x27;GETDWTWATERMARK:ARNOLD&#x27;</span>,<span class=\"string\">&#x27;ARNOLD置乱要求水印图像长宽必须相等！&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">Iw=double(Iw);</span><br><span class=\"line\">W=logical(W);</span><br><span class=\"line\">ca1w=dwt2(Iw,<span class=\"string\">&#x27;haar&#x27;</span>);</span><br><span class=\"line\">ca2w=dwt2(ca1w,<span class=\"string\">&#x27;haar&#x27;</span>);</span><br><span class=\"line\">Wa=W;</span><br><span class=\"line\">rng(rngseed);</span><br><span class=\"line\">idx=randperm(<span class=\"built_in\">numel</span>(ca2w),<span class=\"built_in\">numel</span>(Wa));</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:<span class=\"built_in\">numel</span>(Wa)</span><br><span class=\"line\">  c=ca2w(idx(<span class=\"built_in\">i</span>));</span><br><span class=\"line\">  z=<span class=\"built_in\">mod</span>(c,nW);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> z&lt;nW/<span class=\"number\">2</span></span><br><span class=\"line\">​    Wa(<span class=\"built_in\">i</span>)=<span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">​    Wa(<span class=\"built_in\">i</span>)=<span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">Wg=Wa;</span><br><span class=\"line\">H=[<span class=\"number\">2</span> <span class=\"number\">-1</span>;<span class=\"number\">-1</span>,<span class=\"number\">1</span>]^ntimes;</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:nW</span><br><span class=\"line\">  <span class=\"keyword\">for</span> <span class=\"built_in\">j</span>=<span class=\"number\">1</span>:nW</span><br><span class=\"line\">​    idx=<span class=\"built_in\">mod</span>(H*[<span class=\"built_in\">i</span><span class=\"number\">-1</span>;<span class=\"built_in\">j</span><span class=\"number\">-1</span>],nW)+<span class=\"number\">1</span>;</span><br><span class=\"line\">​    Wg(idx(<span class=\"number\">1</span>),idx(<span class=\"number\">2</span>))=Wa(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>);</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">nc=sum(Wg(:).*W(:))/<span class=\"built_in\">sqrt</span>(sum(Wg(:).^<span class=\"number\">2</span>))/<span class=\"built_in\">sqrt</span>(sum(W(:).^<span class=\"number\">2</span>));</span><br><span class=\"line\">flag=<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> flag</span><br><span class=\"line\">  <span class=\"built_in\">figure</span>(<span class=\"string\">&#x27;Name&#x27;</span>,<span class=\"string\">&#x27;数字水印提取结果&#x27;</span>)</span><br><span class=\"line\">  subplot(<span class=\"number\">121</span>)</span><br><span class=\"line\">  W=imcrop(W,[<span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"built_in\">size</span>(P,<span class=\"number\">2</span>) <span class=\"built_in\">size</span>(P,<span class=\"number\">1</span>)]);  </span><br><span class=\"line\"> imshow(W)</span><br><span class=\"line\">  title(<span class=\"string\">&#x27;原始水印&#x27;</span>)</span><br><span class=\"line\">  subplot(<span class=\"number\">122</span>)</span><br><span class=\"line\">  Wg=imcrop(Wg,[<span class=\"number\">0</span> <span class=\"number\">0</span> <span class=\"number\">122</span> <span class=\"number\">107</span>]);</span><br><span class=\"line\">  imshow(Wg)</span><br><span class=\"line\">  title([<span class=\"string\">&#x27;提取水印，NC=&#x27;</span>,num2str(nc)]);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>GUI调用模块 watermatk.m</strong></p>\n<figure class=\"highlight matlab\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">varargout</span> = <span class=\"title\">watermark</span><span class=\"params\">(varargin)</span></span></span><br><span class=\"line\">gui_Singleton = <span class=\"number\">1</span>;</span><br><span class=\"line\">gui_State = struct(<span class=\"string\">&#x27;gui_Name&#x27;</span>,    mfilename, ...</span><br><span class=\"line\">​          <span class=\"string\">&#x27;gui_Singleton&#x27;</span>, gui_Singleton, ...</span><br><span class=\"line\">​          <span class=\"string\">&#x27;gui_OpeningFcn&#x27;</span>, @watermark_OpeningFcn, ...</span><br><span class=\"line\">​          <span class=\"string\">&#x27;gui_OutputFcn&#x27;</span>, @watermark_OutputFcn, ...</span><br><span class=\"line\">​          <span class=\"string\">&#x27;gui_LayoutFcn&#x27;</span>, [] , ...</span><br><span class=\"line\">​          <span class=\"string\">&#x27;gui_Callback&#x27;</span>,  []);</span><br><span class=\"line\"><span class=\"keyword\">if</span> nargin &amp;&amp; ischar(varargin&#123;<span class=\"number\">1</span>&#125;)</span><br><span class=\"line\">  gui_State.gui_Callback = str2func(varargin&#123;<span class=\"number\">1</span>&#125;);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> nargout</span><br><span class=\"line\">  [varargout&#123;<span class=\"number\">1</span>:nargout&#125;] = gui_mainfcn(gui_State, varargin&#123;:&#125;);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">  gui_mainfcn(gui_State, varargin&#123;:&#125;);</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">watermark_OpeningFcn</span><span class=\"params\">(hObject, eventdata, handles, varargin)</span></span></span><br><span class=\"line\">movegui( hObject,<span class=\"string\">&#x27;center&#x27;</span> );</span><br><span class=\"line\">handles.output = hObject;<span class=\"comment\">%移动窗口到屏幕中心</span></span><br><span class=\"line\">guidata(hObject, handles);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">varargout</span> = <span class=\"title\">watermark_OutputFcn</span><span class=\"params\">(hObject, eventdata, handles)</span> </span></span><br><span class=\"line\">varargout&#123;<span class=\"number\">1</span>&#125; = handles.output </span><br><span class=\"line\"><span class=\"comment\">% --- Executes on button press in pushbutton1.</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">pushbutton1_Callback</span><span class=\"params\">(hObject, eventdata, handles)</span> </span></span><br><span class=\"line\">main</span><br><span class=\"line\">[filename pathname]=uigetfile(&#123;<span class=\"string\">&#x27;*.jpg;*.bmp&#x27;</span>;<span class=\"string\">&#x27;*.*&#x27;</span>&#125;,<span class=\"string\">&#x27;请选择底图文件&#x27;</span>);</span><br><span class=\"line\"><span class=\"comment\">%%打开图像</span></span><br><span class=\"line\">I=imread(filename); <span class=\"comment\">%读取原始图像</span></span><br><span class=\"line\">[filename pathname]=uigetfile(&#123;<span class=\"string\">&#x27;*.png;*.tif&#x27;</span>;<span class=\"string\">&#x27;*.*&#x27;</span>&#125;,<span class=\"string\">&#x27;请选择水印文件&#x27;</span>);</span><br><span class=\"line\">helpdlg(<span class=\"string\">&#x27;选择完毕，您可点击查看以确认是否需要重新选择&#x27;</span>,<span class=\"string\">&#x27;提示&#x27;</span>);</span><br><span class=\"line\">I = rgb2gray(I);<span class=\"comment\">%转换为灰度图</span></span><br><span class=\"line\">W = imread(filename);<span class=\"comment\">%读取水印图像</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> strcmp(filename(<span class=\"keyword\">end</span><span class=\"number\">-3</span>:<span class=\"keyword\">end</span>),<span class=\"string\">&#x27;tif&#x27;</span>)</span><br><span class=\"line\">  W= rgb2gray(W);</span><br><span class=\"line\">  W=imbinarize(W);<span class=\"comment\">%转化成二值图像</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\">P=W;</span><br><span class=\"line\">Mm=<span class=\"built_in\">size</span>(W,<span class=\"number\">1</span>); <span class=\"comment\">%水印的行数</span></span><br><span class=\"line\">Nm=<span class=\"built_in\">size</span>(W,<span class=\"number\">2</span>); <span class=\"comment\">%水印的列数</span></span><br><span class=\"line\"><span class=\"comment\">%将图像扩展为长宽相等</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> Mm&lt;Nm</span><br><span class=\"line\">  Max=Nm;</span><br><span class=\"line\">  Min=Mm;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=Min:Max</span><br><span class=\"line\">​    <span class=\"keyword\">for</span> <span class=\"built_in\">j</span>=<span class=\"number\">1</span>:Max</span><br><span class=\"line\">​      W(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>)=<span class=\"number\">1</span>;</span><br><span class=\"line\">​    <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">  Max=Mm;</span><br><span class=\"line\">  Min=Nm;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> <span class=\"built_in\">i</span>=<span class=\"number\">1</span>:Max</span><br><span class=\"line\">​    <span class=\"keyword\">for</span> <span class=\"built_in\">j</span>=Min:Max</span><br><span class=\"line\">​      W(<span class=\"built_in\">i</span>,<span class=\"built_in\">j</span>)=<span class=\"number\">1</span>;</span><br><span class=\"line\">​    <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span>  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">pushbutton2_Callback</span><span class=\"params\">(hObject, eventdata, handles)</span></span></span><br><span class=\"line\">main</span><br><span class=\"line\"><span class=\"built_in\">figure</span>(<span class=\"string\">&#x27;Name&#x27;</span>,<span class=\"string\">&#x27;载体图像与水印图像&#x27;</span>)</span><br><span class=\"line\">subplot(<span class=\"number\">211</span>);</span><br><span class=\"line\">imshow(I);</span><br><span class=\"line\">title(<span class=\"string\">&#x27;载体图像&#x27;</span>)</span><br><span class=\"line\">subplot(<span class=\"number\">212</span>);</span><br><span class=\"line\">imshow(P);</span><br><span class=\"line\">title(<span class=\"string\">&#x27;水印图像&#x27;</span>) </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">pushbutton3_Callback</span><span class=\"params\">(hObject, eventdata, handles)</span></span></span><br><span class=\"line\">main</span><br><span class=\"line\">[Iw,psnr]=setdwtwatermark(I,W,ntimes,rngseed,<span class=\"number\">0</span>); </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">pushbutton4_Callback</span><span class=\"params\">(hObject, eventdata, handles)</span></span></span><br><span class=\"line\">main</span><br><span class=\"line\">[Wg,nc]=getdwtwatermark(Iw,W,P,ntimes,rngseed,<span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n\n<p><strong>基于小波的水印技术 运行结果演示</strong></p>\n<p><strong>1图像的选择与导入</strong></p>\n<p>进入GUI主界面</p>\n<p><img src= \"https://cdn.jsdelivr.net/gh/CCKNBC/ccknbc.github.io@latest/img/loading.gif\" data-lazy-src=\"https://t1.picb.cc/uploads/2020/06/09/tfsGAW.png\" alt=\"tfsGAW.png\"></p>\n<p><strong>图2 GUI主界面</strong></p>\n<p>点击选择图片，分别选择载体图像和水印图像</p>\n<p><img src= \"https://cdn.jsdelivr.net/gh/CCKNBC/ccknbc.github.io@latest/img/loading.gif\" data-lazy-src=\"https://t1.picb.cc/uploads/2020/06/09/tfs4wL.png\" alt=\"tfs4wL.png\"></p>\n<p><strong>图3 选择底图文件</strong></p>\n<p><img src= \"https://cdn.jsdelivr.net/gh/CCKNBC/ccknbc.github.io@latest/img/loading.gif\" data-lazy-src=\"https://t1.picb.cc/uploads/2020/06/09/tfsHFw.png\" alt=\"tfsHFw.png\"></p>\n<p><strong>图4 选择水印文件</strong></p>\n<p>两项都选择完毕后提示选择完成，</p>\n<p><img src= \"https://cdn.jsdelivr.net/gh/CCKNBC/ccknbc.github.io@latest/img/loading.gif\" data-lazy-src=\"https://t1.picb.cc/uploads/2020/06/09/tfschv.png\" alt=\"tfschv.png\"></p>\n<p><strong>图5 选择完毕 帮助提示框</strong></p>\n<p>对于取消选择未设置警告与报错提示，防止过多弹窗</p>\n<p><strong>2载体图像小波变换</strong></p>\n<p>这部分未单独新开按钮和图片显示窗口，但程序的确执行了，用户无需知晓</p>\n<p><strong>3水印图像的预处理</strong></p>\n<p><img src= \"https://cdn.jsdelivr.net/gh/CCKNBC/ccknbc.github.io@latest/img/loading.gif\" data-lazy-src=\"https://t1.picb.cc/uploads/2020/06/09/tfs5JR.png\" alt=\"tfs5JR.png\"></p>\n<p><strong>图6 预处理成二值图像后的水印</strong></p>\n<p><strong>4小波数字水印的嵌入</strong></p>\n<p><img src= \"https://cdn.jsdelivr.net/gh/CCKNBC/ccknbc.github.io@latest/img/loading.gif\" data-lazy-src=\"https://t1.picb.cc/uploads/2020/06/09/tfsAjg.png\" alt=\"tfsAjg.png\"></p>\n<p><strong>图7 原始水印和置乱水印以及原始图像和添加水印之后的图像对比</strong></p>\n<p><strong>5小波数字水印的提取</strong></p>\n<p><img src= \"https://cdn.jsdelivr.net/gh/CCKNBC/ccknbc.github.io@latest/img/loading.gif\" data-lazy-src=\"https://t1.picb.cc/uploads/2020/06/09/tfs848.png\" alt=\"tfs848.png\"></p>\n<p><strong>图8 原始水印和提取的水印的对比</strong></p>\n<p>将原始水印和提取水印进行对比，两个相关系数为0.99356，相关系数越接近1, 则提取的水印和原始水印越相似。</p>\n",
            "tags": [
                "study",
                "watermark",
                "matlab"
            ]
        }
    ]
}